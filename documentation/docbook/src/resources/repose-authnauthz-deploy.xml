<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
<!ENTITY PRODNAME "Repose">
<!ENTITY PRODABBREV "Repose">
<!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:db="http://docbook.org/ns/docbook"
    xml:id="Repose-AuthNZ-Deployment-Guide">
    <?rax pdf.url="../../repose-authnauthz-deploy.pdf"?>
    <title>&PRODNAME; Authentication &amp; Authorization Component
        Deployment Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; AuthN&amp;AuthZ Deploy</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v1.0</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2012-02-14</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the
                    template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for systems administrators
                interested in configuring their service to use the
                Client Authentication and Client Authorization
                components of the &PRODEXPAND;. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2013-10-23</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Revised edition of
                                Authentication and Authorization
                                document.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-02-14</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial release as combined
                                Authentication and Authorization
                                document.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-01-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook:
                                Republished for Repose v1.0.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-09-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook:
                                Initial release for v0.9.</para>
                        </listitem>
                        <listitem>
                            <para>Authentication Deployment Handbook:
                                Revised code samples and formatting to
                                address feedback from early technical
                                reviewers.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-08-08</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook:
                                Initial release as internal
                                draft.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>About This Document</title>
        <para>The purpose of this handbook is to facilitate deployment
            of the &PRODNAME; Authentication and Authorization
            components. This handbook is not a tutorial. It provides
            basic information that will help you understand and deploy
            these &PRODNAME; components, but you must adapt this
            information to suit your own configuration. </para>
        <para>This handbook is focused on two closely-related
            &PRODNAME; components. Other &PRODNAME; components are
            documented in companion handbooks. </para>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the handbook replaces and obsoletes
                all previous versions. The most recent changes are
                described in the table below: </para>
            <?rax revhistory?>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <!-- naming this section xml:id="Introduction-000" to make it the first page opened in HTML, matching <webhelpDefaultTopic>Introduction-000.html</webhelpDefaultTopic> in pom.xml -->
    <chapter xml:id="Introduction-000">
        <title>What Is Authentication and Authorization?</title>

        <para> Authentication and authorization are related but
            independent ideas: </para>
        <itemizedlist>
            <listitem>
                <para>Authentication is the process of confirming that
                    you are who you say you are. For example, you
                    might be asked to authenticate your identity by
                    providing credentials such as a userid, password,
                    account number, or token. Authentication is often
                    abbreviated as Auth-N.</para>
            </listitem>
            <listitem>
                <para>Authorization is the process of confirming that
                    you have permission to do what you are asking to
                    do. For example, your authenticated identity might
                    be checked against a list of the services to which
                    you have subscribed. Authorization is often
                    abbreviated as Auth-Z.</para>
            </listitem>
        </itemizedlist>
        <para>Repose includes a component designed to support client
            authentication and another component designed to support
            authorization. Both authentication and authorization
            processes are commonly used by software that requires
            users to register their identities and subscribe to
            specific services. </para>
        <para>Using the Repose Authentication and Authorization
            components improves origin service security by ensuring
            that all requests that reach the origin service are from
            valid clients with permissions to use that service. </para>
    </chapter>
    <chapter xml:id="Introduction-001">
        <title>What Can Repose Authentication Do?</title>
        <para>The Repose Authentication component handles
            authentication by calling the authentication service and
            forwarding the authentication information to the origin
            service. The Authentication component can:</para>
        <itemizedlist>
            <listitem>
                <para>Reduce load on the origin service by caching tokens.</para>
            </listitem>
            <listitem>
                <para>Control the Time To Live (TTL) value of how long tokens and roles are cached.</para>
            </listitem>
            <listitem>
                <para>Use Atom Hopperâ€™s atom feed to prevent the cache from storing and authenticating existing invalid tokens.</para>
            </listitem>
            
        </itemizedlist>
        
        
        <important>
            <para> If you wish to use &PRODNAME; for authorization,
                you must first use it for authentication. </para>

        </important>
    </chapter>
    <chapter xml:id="Authentication-Configuration-in-Repose-001">
        <title>How Is Repose Authentication Configured?</title>
        <para>You can configure your service to use the Authentication
            component to validate the identities of your users. </para>
        <para>Client authentication is divided into modules which
            represent different authentication schemes. Depending on
            the Repose components being deployed, the authentication
            configuration may change. In the following example, we are
            configuring the client-auth Repose component to interact
            with the Rackspace Cloud Authentication Service. </para>
        
        
        <para> Key elements of the preceding example are labeled with<example>
           
            <title>Client Authentication Configuration: XML</title>
            <programlistingco>
                <areaspec>
                    <area xml:id="repose-authn.xml.delegable"
                        units="linecolumn" coords="7 21"/>
                    <area xml:id="repose-authn.xml.server"
                        units="linecolumn" coords="10 10"/>
                    <area xml:id="repose-authn.xml.uri"
                        units="linecolumn" coords="11 13"/>
                    <area xml:id="repose-authn.xml.auth"
                        units="linecolumn" coords="11 46"/>
                    <area xml:id="repose-authn.xml.regex"
                        units="linecolumn" coords="13 29"/>
                    <area xml:id="repose-authn.xml.type"
                        units="linecolumn" coords="13 56"/>
                </areaspec>
                <programlisting language="xml">
<xi:include href="samples/papi-authn.xml" parse="text"/>
                </programlisting>
            </programlistingco>
        </example>
            callouts and explained below: </para>
        <calloutlist>
            <callout arearefs="repose-authn.xml.delegable">
                <para>All &PRODNAME; authentication modules support
                    authentication <firstterm>delegation</firstterm>.
                    Delegation may be enabled or disabled by setting
                    the <code>rackspace-auth delegable</code>
                    attribute to <code>true</code> or
                        <code>false</code>. To better protect
                    services, delegation always defaults to
                        <code>false</code>. </para>
                <para> For more about delegation, please refer to the
                    "Authentication in OpenStack" blueprint at <link
                        xlink:href="http://wiki.openstack.org/openstack-authn"
                        >http://wiki.openstack.org/openstack-authn</link>. </para>
                <para> </para>
            </callout>
            <callout arearefs="repose-authn.xml.server">
                <para>The
                            <firstterm><code>authentication-server</code></firstterm>
                    configuration element identifies an authentication
                    endpoint. Tokens are validated against this
                    endpoint. While a password is required in the
                    configuration file, it is important to note that
                    file permissions can be set to make the
                    configuration file user-readable only and
                    therefore more secure. </para>
                <para> </para>
            </callout>
            <callout arearefs="repose-authn.xml.uri">
                <para>The <firstterm><code>URI</code></firstterm>
                    attribute of the
                        <code>authentication-server</code>
                    configuration element identifies a destination to
                    which the component must route token validation
                    requests. This URI must include all information
                    required to construct an HTTP request, including
                    the authentication service's context root and the
                    port number on which the authentication service is
                    listening. </para>
                <para> </para>
            </callout>
            <callout arearefs="repose-authn.xml.auth">
                <para>The authentication service's context root is
                        <firstterm>/auth</firstterm> in this example. </para>
                <para> </para>
            </callout>
            <callout arearefs="repose-authn.xml.regex">
                <para> Account mappings in the configuration inform
                    the component of where to source the identity
                    string in client-requested URIs. This is achieved
                    via a regular expression
                        (<firstterm>regex</firstterm>). In this
                    regular expression, the service implementor must
                    specify a regular expression capture group which,
                    when executed, will capture the requesting
                    client's identity string. This string will then be
                    sent to the authentication service as part of the
                    validation request.</para>
                <para> </para>
            </callout>
            <callout arearefs="repose-authn.xml.type">
                <para> The <firstterm><code>type</code></firstterm>
                    attribute identifies the type of account
                    associated with this authentication request. In
                    this example, the account is of type
                        <code>CLOUD</code>. Valid account types vary
                    depending on the requirements of the
                    authentication service, so you should refer to the
                    documentation describing the authentication
                    service that you use. </para>
                <para> </para>
            </callout>
        </calloutlist>

    </chapter>

    <chapter xml:id="Authentication-Operations-in-Repose-003">
        <title>How Does Authentication Work?</title>
        <para>The Repose client authentication component acts as an
            HTTP reverse proxy. It passes incoming HTTP requests to an
            external authentication service. If the authentication
            service validates the request, Repose adds header
            information to the HTTP request and forwards it to the
            origin service. If the authentication service rejects the
            request, Repose returns the HTTP response to the client. </para>
        
        <section xml:id="Authentication_Schemes-d1e241">
            <title>Authentication Scheme with the OpenStack Identity
                Service</title>
           
                <para>The &PRODNAME; Authentication component is
                designed to work with the OpenStack Identity Service
                authentication scheme. Using this authentication
                scheme, the Authentication component may be configured
                to interact with Keystone, OpenStack's Identity
                Service, when validating user credentials. To learn
                more about the supported authentication scheme, read
                the <link
                    linkend="Authorization_Scheme_OpenStack_Identity-d1e325"
                    >OpenStack Identity Service API v2.0
                    Reference.</link></para>
            
            
                <figure
                    xml:id="Authentication_OpenStack-Lifecycle-figure">
                    <title>Request/Response Lifecycle for
                        Authentication by the OpenStack Identity
                        Service</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata
                                fileref="figures/repose-openstack-authn-scheme.png"
                                format="PNG" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para> The request/response lifecycle is: <orderedlist>
                    <listitem>
                        <para> The client sends a request with the
                            user token to the Repose Authentication
                            component. </para>
                        <para> The incoming HTTP request must have a
                            URI and a token in the
                                <code>X-Auth-Token</code> request
                            header. The URI may contain the tenant ID.
                        </para>
                    </listitem>
                    <listitem>
                        <para>Repose parses the URI token to extract the tenant ID. 
                            If the token is missing, the authentication component 
                            rejects the request.  
                            </para>
                        
                    </listitem>
                    <listitem>
                        <para> Repose sends the token validation
                            request to an external authentication
                            service. </para>
                    </listitem>
                    <listitem>
                        <para> The authentication service validates
                            the token. </para>
                    </listitem>
                    <listitem>
                        <para>The authentication service sends the
                            token information back to Repose if the
                            token is valid.</para>
                    </listitem>
                    <listitem>
                        <para> Repose caches the token. </para>
                    </listitem>
                    <listitem>
                        <para> Repose requests the user groups from
                            the authentication service. </para>
                    </listitem>
                    <listitem>
                        <para> The authentication service retrieves
                            the user groups. </para>
                    </listitem>
                    <listitem>
                        <para> The authentication service sends the
                            user groups to Repose. </para>
                    </listitem>
                    <listitem>
                        <para> Repose caches the user groups and sets
                            the headers. </para>
                    </listitem>
                    <listitem>
                        <para> Repose forwards the request with the
                            following additional headers: </para>
                        <itemizedlist>
                            <listitem><para>X-Authorization</para></listitem>
                            <listitem><para>X-Tenant-Name</para></listitem>
                            <listitem><para>X-User-Name</para></listitem>
                            <listitem><para>X-User-Id</para></listitem>
                            <listitem><para>X-Roles</para></listitem>
                            <listitem><para>X-Token Expires</para></listitem>
                            <listitem><para>X-Catalog</para></listitem>
                            <listitem><para>X-PP-User</para></listitem>
                            <listitem><para>X-PP-Groups</para></listitem>
                        </itemizedlist>
                    </listitem>
                    <listitem>
                        <para> The origin service processes the request. </para>
                    </listitem>
                    <listitem>
                        <para> The origin service returns the response. </para>
                    </listitem>
                    <listitem>
                        <para> Repose passes the response. </para>
                    </listitem>
                    <listitem>
                        <para> Repose returns the response with the user token to the client. </para>
                    </listitem>
                    
                </orderedlist>
            </para>
                <para> </para>
           

        </section>
        <section xml:id="Authentication_Headers-d1e251">
            <title>Headers</title>
            <para>This section describes the headers that are used by
                the Repose Authentication component to define the
                operating parameters of the HTTP transaction.</para>
            <table rules="all">
                <caption>General Authentication Headers</caption>
                <col width="15%"/>
                <col width="35%"/>
                <col width="30%"/>
                <col width="20%"/>
               
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                        <th>Function</th>
                        <th>Example</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <para>X-Auth-Token</para>
                        </td>
                        <td>Required on incoming request</td>
                        <td>
                            <para>Obtained from AuthN service and
                                provides access to origin
                                service.</para>
                        </td>
                        <td>
                            <para>123abc</para>
                        </td>
                    </tr>
                    <tr>
                        <td>X-Authorization</td>
                        <td>Returned from auth service</td>
                        <td>Informs origin service that user has been
                            authenticated.</td>
                        <td>Proxy User</td>
                    </tr>
                    <tr>
                        <td>X-Identity-Status</td>
                        <td>Returned from auth service and passed to
                            origin service
                        </td>
                        <td>Indicates if identity has been
                            confirmed.</td>
                        <td>Confirmed or Indeterminate</td>
                    </tr>
                    <tr>
                        <td>X-Tenant-Name</td>
                        <td>Returned from auth service and passed to
                            origin service </td>
                        <td>Identifies tenant name.</td>
                        <td>1234567</td>
                    </tr>
                    <tr>
                        <td>X-Tenant-ID</td>
                        <td>Returned from auth service and passed to
                            origin service
                        </td>
                        <td>Identifies tenant ID.</td>
                        <td>1234567</td>
                    </tr>
                    <tr>
                        <td>X-User-Name</td>
                        <td>Returned from auth service</td>
                        <td>Identifies user name.</td>
                        <td>jjenkins</td>
                    </tr>
                    <tr>
                        <td>X-User-ID</td>
                        <td>Returned from auth service and passed to
                            origin service
                        </td>
                        <td>Identifies user ID.</td>
                        <td>12345</td>
                    </tr>
                    <tr>
                        <td>X-Roles</td>
                        <td>Returned from auth service and passed to
                            origin service
                        </td>
                        <td>Identifies roles.</td>
                        <td>admin, user</td>
                    </tr>
                </tbody>
            </table>
            <para>
                <emphasis role="bold">Token Expiration
                    Header</emphasis>
            </para>
            <para>When a token is validated, the authentication
                service will return identifying information with token
                expiration date. The Authentication component will put
                this information into the following header in HTTP
                rfc1123 GMT time format. </para>
            <table rules="all">
                <caption>Token Expiration Header</caption>
                <col width="33%"/>
                <col width="33%"/>
                <col width="33%"/>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Function</th>
                        <th>Example</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>X-Token-Expires</para>
                                </listitem>
                            </orderedlist>
                        </td>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>Identifies when token will
                                        expire.</para>
                                </listitem>
                            </orderedlist>
                        </td>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>Tue, 02 Jul 2013 16:25:08
                                        GMT</para>
                                </listitem>
                            </orderedlist>
                        </td>
                    </tr>
                </tbody>
            </table>
            <para>
                <emphasis role="bold">Setting the X-Catalog Header
                </emphasis>
            </para>
            <para> Client authentication includes the ability to pass
                on a base 64 encoded service catalog from the
                authentication service via the <code>x-catalog</code>
                header to the origin service. </para>
            <table rules="all">
                <caption>X-Catalog Header</caption>
                <col width="20%"/>
                <col width="20%"/>
                <col width="60%"/>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Function</th>
                        <th>Example</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>X-Catalog</para>
                                </listitem>
                            </orderedlist>
                        </td>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>Lists the service catalog for
                                        the user.</para>
                                </listitem>
                            </orderedlist>
                        </td>
                        <td>
                            <orderedlist>
                                <listitem>
                                    <para>
                                        amplbmtpbnMgc2VydmljZSBjYXRhbG9nDQo=
                                    </para>
                                </listitem>
                            </orderedlist>
                        </td>
                    </tr>
                </tbody>
            </table>
            <example>
                <title>Configuration Element for X-Catalog
                    Header</title>
                <literallayout class="monospaced">&lt;endpoints-in-header format="xml" cache-timeout="600000"identity-contract-versions="2">
			</literallayout>
            </example>
            
            
            <para><emphasis role="bold"> X-PP-User and
                X-PP-Groups</emphasis></para>
            <para>If the requesting client is able to authenticate and
                is passed down the request chain, the Authentication
                component will set <code>X-PP-User</code> and
                    <code>X-PP-Groups</code> according to the schema
                of the authentication service. The Repose
                Authentication component will also set a quality with
                a value of '1' for these headers. </para>
            <example>
                <title>Configuration Element for X-PP-User
                    Header</title>
                <literallayout class="monospaced">X-PP-User:Username
			</literallayout>
            </example>
            
            
            
        </section>
        <section xml:id="HowDoesAuthenticationWork-d1e242">
            <title>Authentication Procedures</title>
            <para> This section describes some of the common
                authentication procedures used by the Repose
                Authentication component.</para>
            <section xml:id="GetAuthToken_fromRequestHeader-dle252">
                <title>Get Authentication Token from Request
                    Header</title>

                <para>If the incoming HTTP request
                        <code>X-Auth-Token</code> header does not have
                    an authentication token,  Repose performs the same
                    steps as when the tenant ID is missing. Thus, both
                    the tenant ID and the <code>X-Auth-Token</code>
                    must be present in order for Repose to attempt to
                    validate user credentials. </para>
                <para>If delegable is true and Tenant ID and token are
                    not present, Repose will send the request through
                    and set the <code>X-Identity-Status</code> to
                        <code>indeterminate</code>. </para>
            </section>
            <section xml:id="GetAuthToken_fromRequestHeader-dle262">
                <title>Validate Tenant ID/Token with Authentication
                    Service</title>
                <para>If the Repose Authentication component
                    successfully obtains the tenant ID and the token
                    from the request, Repose will send a request to
                    the external authentication service to validate
                    the token. </para>
                <para>
                    <emphasis role="bold">If the token is valid,
                        Repose then performs the following
                        actions:</emphasis></para>
                <orderedlist>

                    <listitem>
                        <para>If the <code>request-groups</code>
                            attribute in the <code>client-auth</code>
                            configuration file is set to
                                <code>true</code> (the default),
                            Repose performs the following
                            actions:</para>
                        <orderedlist>
                            <listitem><para>Sends another request to
                                the external authentication service to
                            retrieve the user's groups by using the
                            user ID from the validated token.</para> </listitem>
                            <listitem><para> Adds the userâ€™s groups to the <code>X-PP-Groups</code> request
                                   header, which is used by the Repose
                                   Rate Limiting component.</para> </listitem>
                        </orderedlist>
                       
                    </listitem>
                    
                    <listitem>
                        <para> Adds the user ID to the
                                <code>X-PP-User</code> request header,
                            which is used by the Rate Limiting
                            component. </para>

                    </listitem>
                    <listitem>
                        <para> Adds the user name that is returned in
                            the validated token object to the
                                <code>X-User-Name</code> header. </para>
                    </listitem>
                    <listitem>
                        <para> Adds the user ID that is returned in
                            the validated token object to the
                                <code>X-User-ID</code> header.</para>
                    </listitem>
                    <listitem>
                        <para> Adds the tenant ID that is passed in
                            the URI to the <code>X-Tenant-Name</code>
                            header and the <code>X-Tenant-ID</code>
                            header. </para>
                    </listitem>
                    <listitem>
                        <para> Adds the roles that are returned in the
                            validated token object to the
                                <code>X-Roles</code> header.</para>
                    </listitem>
                    <listitem>
                        <para> Adds the <code>X-Authorization</code>
                            header to the <code>"Proxy"
                                TenantID</code>.</para>
                    </listitem>
                    <listitem>
                        <para> If <code>delegable</code> is set to
                                <code>true</code>, sets the
                                <code>X-Identity-Status</code> header
                            to confirmed. </para>
                    </listitem>
                    <listitem>
                        <para> Passes the updated request to the
                            origin service. </para>
                    </listitem>
                </orderedlist>
                
                <para>
                    <emphasis role="bold">If the token is not
                        valid:</emphasis></para>
                        <para>Repose sets the <code>X-Authorization</code>
                            header to <code>"Proxy" UserId</code>. If <code>delegable</code> is set to
                            <code>true</code>, then a 404 error
                            message is returned.</para>
                        
                     
                <para>When validating a
                    user token, Repose will print an error message in
                    the logs and return a 500 error if the response
                    that it receives from the Authentication Service
                    does not have the following:</para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>Tenant</para>
                        </listitem>
                        <listitem>
                            <para>Roles List</para>
                        </listitem>
                        <listitem>
                            <para>User</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    <note>
                        <para>
                            <emphasis role="bold">With the
                                introduction of configurable service
                                admin roles, tenant validation can be
                                bypassed for any token with one or
                                more roles in the Authentication
                                Service that match any of the roles in
                                the service-admin-roles
                                list.</emphasis>
                        </para>
                    </note>
                </para>
                
            </section>
        </section>
    </chapter>


    <chapter xml:id="Authentication_Features-d1e252">
        <title>What Are Some Authentication Features</title>
        <para>The Authentication component offers the following
            features that can enhance performance and
            functionality.</para>
        <section xml:id="Tenanted-Non-tenanted_Mode-252">
            <title>Tenanted/Non-tenanted Mode</title>
            <para><emphasis role="bold">Tenanted Mode - Parse
                    URI</emphasis></para>
            <para>The Authentication component will parse the URI
                using a configurable regular expression ("id-reg" in
                the client-auth-n-cfg.xml file) to extract the tenant
                ID from the request URI. If the tenant ID is missing,
                Repose will not make a call to the external
                authentication service to validate credentials. Repose
                will set the <code>X-Authorization</code> header with
                no user entry (e.g. <code>X-Authorization:
                    Proxy</code>). </para>
            <para>If the origin service is configured to run in
                    <code>delegated</code> mode, an HTTP request
                header named <code>X-Identity-Status</code> will be
                set with a value of <code>Indeterminate</code>. The
                request will then be passed along to the origin
                service with the <code>X-Authorization</code> and
                    <code>X-Identity-Status</code> request headers
                set.</para>
            <para>The  Authentication component knows if the origin
                service is in <code>delegated</code> mode based on the
                boolean value of the delegable attribute in the Repose
                    <code>client-auth-n.cfg.xml</code> file.</para>
            <para>If the tenant ID is missing and the origin service
                is not running in <code>delegated</code> mode (i.e.
                delegable="false" in the client-auth-n.cfg.xml file),
                the Repose Authentication Component does not forward
                the request to the origin service. Instead, the
                Authentication component returns a 401 to the
                client.</para>
            <para> </para>
            <para><emphasis role="bold">Non-tenanted
                Mode</emphasis></para>
            <para>The Authentication component has the option of a
                non-tenanted mode within the
                    <code>openstack-auth</code> element of the
                configuration. In this mode, Repose will validate the
                authentication token without regard to a
                tenant.</para>
            <para>
                <important>
                    <para>When running in non-tenanted mode, remove the client-mapping
                       element in the configuration because it will not be used and will cause
                       a configuration error if present.</para>
                </important>
            </para>

        </section>
        <section xml:id="WhiteList-d1e253">
            <title>Whitelist</title>

            <para>You can configure Repose authentication to allow the
                processing of requests that do not require
                authentication. For example, a service might want all
                calls authenticated with the exception of the call for
                WADL retrieval. In this situation, you can configure
                the Repose whitelist as shown in the sample
                authentication configuration file.</para>

            <para>The whitelist contains a list of regular expressions
                Repose will attempt to match against the full request
                URI. If the URI matches a regular expression on the
                white list, the request is passed to the origin
                service. Otherwise, authentication is performed
                against the request. </para>
            <example><title>Sample Authentication Configuration File</title>
            <programlisting language="xml">
<xi:include href="samples/client-auth-n.cfg.xml" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section xml:id="Caching-d1e254">
            <title>Caching</title>
            <para>Repose authentication caches authentication tokens,
                roles, and groups. The length of time that tokens and
                roles are cached is determined by the Time To Live
                (TTL) value that is returned from the authentication
                service (for example, Rackspace Cloud Identity) during
                token validation. </para>
                <para>You can specify an alternate maximum
                TTL for caching of authentication tokens and roles in
                the client authentication configuration file. If you
                specify the <code>token-cache-timeout</code> value in
                the configuration file, this value is used when
                caching tokens and roles, unless the token TTL value
                is less than the <code>token-cache-timeout</code>
                value. 
            This method prevents Repose from caching stale
                tokens. If the token's TTL exceeds the maximum allowed
                TTL value, the maximum allowed TTL is used.</para>
            <para>The length of time that user groups are cached is
                determined by a Repose configuration attribute:
                    <code>group-cache-timeout</code>. The attribute
                value is optional and defaults to 600,000 milliseconds
                (10 minutes). You can set the
                    <code>group-cache-timeout</code> value in the
                OpenStack authentication scheme as shown in the
                following example.</para>
            <example><title>OpenStack Authentication Scheme with the
                Caching Feature</title>
            <programlisting language="xml">
<xi:include href="samples/repose-authn-caching.txt" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section xml:id="Delegated-Mode-d1e255">
                <title>Delegated Mode</title>
                    
                <para>In some cases, you may want the decision to
                reject an unauthenticated request to be made by the
                authentication service. The Repose Authentication
                component may be placed in <code>delegated</code> mode
                to allow an unauthenticated request to pass as either
                    <code>confirmed</code> or
                    <code>indeterminate</code>. </para>
                <para> The Authentication component sends a
                    <code>confirmed</code> value when valid
                credentials and identity have been confirmed. The
                Authentication component sends an
                    <code>indeterminate</code> value when no
                credentials have been sent or identity has not been
                confirmed. </para>
                <para>If the origin service is configured to run in
                    <code>delegated</code> mode, the
                    <code>X-Identity-Status</code> HTTP header is set
                to a value of <code>indeterminate</code>. The request
                is then passed along to the origin service with the
                    <code>X-Authorization</code> and the
                    <code>X-Identity-Status</code> request headers set
                with no user entry (for example,
                    <code>X-Authorization: Proxy and
                    X-Identity-Status: Indeterminate</code>). </para>
            </section>
        <section xml:id="Token_Invalidation_Through_Atom_Feed-d1e256">
            <title>Token Invalidation Through Atom Feed</title>
            <para>Using Atom Hopperâ€™s Atom feed for token invalidation
                allows you to clear your cache of possible invalid
                tokens. This feature compares the existing tokens in
                the cache against the Atom feed. If the Atom feed
                states that a token is invalid, the token is deleted
                from the cache, which prevents the cache from storing
                and authenticating existing invalid tokens. You can
                configure this feature to listen to multiple atom
                feeds if necessary. </para>
            <para><guilabel>Configuration</guilabel></para>
            <para>To configure your subscription to an Atom feed to
                retrieve invalidated users and tokens, add the
                &lt;atom-feeds&gt; element to the client-auth config
                as shown below. 
                <note>
                    <para> Currently this functionality only works
                        with the &lt;openstack-auth&gt; option for the
                        client auth filter. </para>
                </note>
            </para>
            
            <example><title>Client Authentication Configuration with
                Atom Feed</title>
                <programlisting language="xml">
<xi:include href="samples/client_auth_config_atom_hopper.txt" parse="text"/>
                </programlisting>
            </example>
            
           <para>
                <table rules="all">
                    <caption>Configurations Options</caption>
                   
                        <col
                           width="33%"/>
                        <col
                            width="33%"/>
                        <col
                            width="33%"/>
                        <thead>
                            <tr>
                               <th>Attribute</th>
                                <th>Description</th>
                                <th>Options</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    check-interval
                                </td>
                                <td>Length of time (in milliseconds)
                                that Repose will poll the configured
                                Atom feeds. </td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Optional</para>
                                        </listitem>
                                    
                                    <listitem>
                                        <para>Default: 60000</para>
                                    </listitem>
                                    <listitem>
                                        <para>Minimum: 10000 (Use this
                                   option to prevent Repose from
                                   flooding Atom endpoints with
                                   requests.)</para>
                                    </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    uri
                                </td>
                                <td>Location of Identity feed that
                                listens for updates to users and
                                tokens.</td>
                                <td>
                                <itemizedlist>
                                   <listitem>
                                   <para>Required</para>
                                   </listitem>
                                </itemizedlist>
                            </td>
                            </tr>
                            <tr>
                                <td>
                                    isAuthed
                                </td>
                                <td>Configures whether or not the
                                configured Atom feed will require an
                                Auth token to retrieve feeds.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Optional</para>
                                        </listitem>
                                        
                                        <listitem>
                                            <para>Default:
                                   false</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                                
                            </tr>
                            <tr>
                                <td>auth-uri</td>
                                <td>Configures the authentication
                                endpoint to retrieve Auth tokens to
                                read the configured Atom feed.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Optional</para>
                                        </listitem>
                                        
                                        <listitem>
                                   <para>Default:</para>
                                   <para>- If auth-url is not
                                   configured and isAuthed is set to
                                   true, then Repose will use the user
                                   credentials from the
                                   &lt;identity-service> element
                                   within the client-auth
                                   configuration.</para>
                                   <db:para>-If auth-url is
                                   configured, then the
                                   <code>user</code> and
                                   <code>password</code> attributes
                                   must be configured.</db:para>
                                   </listitem>
                                    </itemizedlist>
                                </td>
                                
                            </tr>
                            <tr>
                                <td>
                                    user
                                </td>
                                <td>User name used to retrieve the
                                Auth token that is required to read
                                Atom feeds. </td>
                                <td>
                                <itemizedlist>
                                   <listitem>
                                   <para>Optional</para>
                                   </listitem>
                                </itemizedlist>
                            </td>
                            </tr>
                            <tr>
                                <td> password </td>
                                <td>Password of the user that is used
                                to retrieve the Auth token required to
                                read Atom feeds.</td>
                                <td>
                                <itemizedlist>
                                   <listitem>
                                   <para>Optional</para>
                                   </listitem>
                                </itemizedlist>
                            </td>
                            </tr>
                            
                        </tbody>
                    
                </table>
            </para>
        </section>
    </chapter>
    <chapter xml:id="Authentication_Tests-d1e262">
        <title>What Are Some Authentication Tests?</title>
        <para>The authentication test suite is first performed against
            a mock service that implements the OpenStack Identity
            Service contract with Rackspace extensions. The
            Authentication suite is then run against the actual
            implementations of the contracts.</para>
        <para>The authentication test suite is summarized in the
            Repose wiki at <link
                xlink:href="http://wiki.openrepose.org/display/REPOSE/Client+Authentication+Filter"
                >Repose Authentication Tests</link> . You can adapt
            those tests to work within your own Repose configuration. </para>
    </chapter>
    
    
    <chapter xml:id="Client-Authorization-002">

        <title>What Can Repose Authorization do?</title>
        <para>For identities that are validated by the Authentication
            component, you can use the Repose Authorization component
            to confirm that the services being requested match those
            for which the user has permission. </para>
        <para> The Authorization component enables the service
            implementer to validate that a client's request is
            allowed. <itemizedlist>
                <listitem>
                    <para> If the client's request is allowed, then
                        the request is passed through without any
                        changes. </para>
                </listitem>
                <listitem>
                    <para> If the client's request is not allowed,
                        then the request is denied with an HTTP
                            <errorcode>403</errorcode> (forbidden)
                        response. </para>
                </listitem>
            </itemizedlist>A request is considered authorized if any
            of the endpoints in the client's endpoint list start with
            the service endpoint associated with the requested
            component. For example, if an authenticated client
            requests the compute service, and that client's endpoint
            list (also known as a service catalog) includes an
            endpoint for the compute service, then the client is
            authorized to use the compute service and the client's
            request is forwarded to the compute service for further
            processing.</para>
    </chapter>
    <chapter xml:id="How-Does-Authorization-Work-003">
        <title>How Does Authorization Work?</title>
        <para>The &PRODNAME; Authorization component's decision flow
            is summarized in the drawing below: </para>
        <figure xml:id="Authorization_Decisions-figure">
            <title>Decision Flow in the &PRODNAME; Client
                Authorization component</title>
            <!--this is now PNG from openrepose wiki; retry as SVG when I find John's email attachment-->
            <mediaobject>
                <imageobject>
                    <imagedata
                        fileref="figures/repose-authz-decisions.png"
                        format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>As shown above, the Authorization component must be
            configured to represent a valid endpoint. The client
            receives a token as a result of successful authentication;
            the identity server uses the client's token to retrieve
            the client's endpoint list. The Authorization component
            then compares the configured endpoint against the
            authenticated client's endpoint list. </para>
        <important>
            <para> The Authorization component assumes that any
                requests passed to it have already been authenticated. </para>
        </important>
        <section xml:id="Authorization_Schemes-d1e320">
            <title>Authorization Scheme with the OpenStack Identity
                Request A</title>
            <para> The &PRODNAME; Authorization component is designed
                to allow selection from a list of supported
                authorization schemes. The list of supported
                authorization schemes is:</para>
            <itemizedlist>
                <listitem>
                    <para>
                        <link
                            linkend="Authorization_Scheme_OpenStack_Identity-d1e325"
                            >OpenStack Identity Request
                            Authorization</link>
                    </para>
                </listitem>
            </itemizedlist>

            <section
                xml:id="Authorization_Scheme_OpenStack_Identity-d1e325">
                <title>OpenStack Identity Request
                    Authorization</title>
                <para>In the following authorization configuration,
                        <code>rackspace-authorization</code> specifies
                    the <code>openstack-identity</code> authorization
                    scheme and <code>service-endpoint</code> specifies
                    a Rackspace service.</para>
                <example>
                    <title>Client Authorization Configuration for
                        OpenStack Identity: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/repose-authz-config-openstack.xml" parse="text"/>
                </programlisting>
                </example>
                <para>The Authorization component must be able to
                    communicate with an identity server that
                    implements the identity scheme to obtain a
                    client's endpoint list. You make this possible by
                    defining <code>rackspace-authorization</code> in
                    your &PRODNAME; configuration. This configuration
                    element informs the Authorization component how to
                    contact the identity server, which credentials to
                    use when contacting the OpenStack identity server,
                    and how long to cache responses from the OpenStack
                    identity server. </para>
                <table rules="all">
                    <caption>Authorization Server Configuration
                        Element Attributes</caption>
                    <col width="20%"/>
                    <col width="10%"/>
                    <col width="10%"/>
                    <col width="50%"/>
                    <thead>
                        <tr>
                            <th>Configuration Attribute</th>
                            <th>Type</th>
                            <th>Required?</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>username</code></td>
                            <td>String</td>
                            <td>YES</td>
                            <td>The username to send to theÂ OpenStack
                                identity server when authenticating
                                the component for admin calls</td>
                        </tr>
                        <tr>
                            <td><code>password</code></td>
                            <td>String</td>
                            <td>YES</td>
                            <td>The password to send to theÂ OpenStack
                                identity server when authenticating
                                the component for admin calls</td>
                        </tr>
                        <tr>
                            <td><code>href</code></td>
                            <td>anyURI</td>
                            <td>YES</td>
                            <td>The full, valid URI of the OpenStack
                                identity server</td>
                        </tr>
                        <tr>
                            <td><code>endpoint-list-ttl</code></td>
                            <td>int</td>
                            <td>NO</td>
                            <td>Duration in seconds for how long the
                                component will cache (time to live
                                (TTL)) a valid endpoint-list from the
                                OpenStack identity server</td>
                        </tr>
                    </tbody>
                </table>
                <para>The Authorization component must be able to
                    identify which service it represents when
                    inspecting a client's endpoint list. The
                        <code>service-endpoint</code> configuration
                    element informs the authorization component of the
                    service endpoint's public URL. If the service
                    endpoint's public URL matches one of the endpoints
                    in the client's endpoint list, the client is
                    authorized to use that service. <table rules="all">
                        <caption>Service Endpoint Configuration
                            Element Attributes</caption>
                        <col width="20%"/>
                        <col width="10%"/>
                        <col width="10%"/>
                        <col width="50%"/>
                        <thead>
                            <tr>
                                <th>Configuration Attribute</th>
                                <th>Type</th>
                                <th>Required?</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>href</code></td>
                                <td>anyURI</td>
                                <td>YES</td>
                                <td>A valid URL that can be used to
                                   match against the
                                   <code>publicURL</code> values in
                                   the client's endpoint list.</td>
                            </tr>
                        </tbody>
                    </table>
                    <warning>
                        <para>In a client's endpoint list (also known
                            as service catalog), each endpoint must
                            specify its <code>publicURL</code> and
                                <code>type</code> if the client is to
                            be authorized by using the &PRODNAME;
                            Authorization component and the OpenStack
                            identity service. This is a requirement of
                            the OpenStack identity service contract.
                            If any required endpoint elements are null
                            for any endpoint in the client's endpoint
                            list, &PRODNAME; issues a warning: <itemizedlist>
                                <listitem>
                                   <para> If <code>publicURL</code> is
                                   null, the warning is <code>Endpoint
                                   Public URL is null. This is a
                                   violation of the OpenStack Identity
                                   Service contract.</code>
                                   </para>
                                </listitem>
                                <listitem>
                                   <para> If <code>type</code> is
                                   null, the warning is <code>Endpoint
                                   Type is null. This is a violation
                                   of the OpenStack Identity Service
                                   contract.</code>
                                   </para>
                                </listitem>
                            </itemizedlist> After issuing the
                            appropriate warning, &PRODNAME; ignores
                            the invalidly-specified endpoint and
                            continues processing the other endpoints
                            in the list. </para>
                    </warning></para>
            </section>
        </section>

        <section xml:id="Authorization_Tests-d1e327">
            <title>Authorization Tests</title>
            <para>You can adapt the tests described in this table to
                work within your own &PRODNAME; configuration. <table
                    rules="all">
                    <caption>Authorization Test Suite
                        Summary</caption>
                    <col width="33%"/>
                    <col width="34%"/>
                    <col width="33%"/>
                    <thead>
                        <tr>
                            <th>Test</th>
                            <th>Sample Command</th>
                            <th>Expected Outcome</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>When authorizing requests in which
                                client authentication has been
                                delegated ...</td>
                            <td><code>curl -X GET -H
                                   "www-authenticate: delegated"
                                   --verbose
                                   http://repose-host/some/protected/resource</code></td>
                            <td>... service must return an HTTP
                                   <errorcode>403</errorcode>
                                (forbidden) response.</td>
                        </tr>
                        <tr>
                            <td>When authorizing requests in which
                                authentication information (username
                                and token) is not provided ...</td>
                            <td><code>curl -X GET --verbose
                                   http://repose-host/some/protected/resource</code></td>
                            <td>... service must return an HTTP
                                   <errorcode>401</errorcode>
                                (unauthorized) response.</td>
                        </tr>
                        <tr>
                            <td>When authorizing requests in which
                                authentication information (username
                                and token) is provided ...</td>
                            <!-- in <code>, replaced one < with &lt; so Author parses OK; come back later and retry as CDATA -->
                            <td><code>curl -X GET -H "x-auth-token:
                                   &lt;valid-token>" --verbose
                                   http://repose-host/some/protected/resource</code></td>
                            <td>... service must pass the request
                                downstream. </td>
                        </tr>
                    </tbody>
                </table></para>
        </section>


    </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>
