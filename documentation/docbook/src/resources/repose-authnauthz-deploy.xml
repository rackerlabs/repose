<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
<!ENTITY PRODNAME "Repose">
<!ENTITY PRODABBREV "Repose">
<!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook" 
      xml:id="Repose-AuthNZ-Deployment-Guide">
    <?rax pdf.url="../../repose-authnauthz-deploy.pdf"?>
    <title>&PRODNAME; Auth-N &amp; Auth-Z Components Deployment Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; AuthN&amp;AuthZ Deploy</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v1.0</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2012-02-14</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for systems administrators interested in configuring
                their service to use the Client Authentication and Client Authorization components of the &PRODEXPAND;. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2012-02-14</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial release as combined
                                Authentication and Authorization
                                document.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-01-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook: Republished for Repose v1.0.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-09-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook: Initial release for v0.9.</para>
                        </listitem>
                        <listitem>
                            <para>Authentication Deployment Handbook: Revised code samples and formatting to address feedback from early technical reviewers.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-08-08</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Authentication Deployment Handbook: Initial release as internal draft.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>About This Document</title>
            <para> The purpose of this handbook is to facilitate
            deployment of &PRODNAME;'s client authentication and
            authorization components. This handbook is not a tutorial.
            It provides basic information that will help you
            understand and deploy these &PRODNAME; components, but you
            must adapt this information to suit your own
            configuration. </para>
            <para> This handbook is focused on two closely-related
            &PRODNAME; components. Other &PRODNAME; components are
            documented in companion handbooks. </para>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the guide replaces and obsoletes all previous versions.
            The most recent changes are described in the table below: </para>
            <?rax revhistory?>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <!-- naming this section xml:id="Introduction-000" to make it the first page opened in HTML, matching <webhelpDefaultTopic>Introduction-000.html</webhelpDefaultTopic> in pom.xml -->
    <chapter xml:id="Introduction-000">
        <title>Introduction to the Client Authentication and Authorization Components of &PRODNAME;</title>
        <para>
            &PRODNAME; includes a component designed to support
            <link linkend="Client-Authentication-001">client authentication</link> 
            and 
            another component designed to support 
            <link linkend="Client-Authorization-002">client authorization</link>.
        </para>
        <para> 
            Authentication and authorization are related but independent ideas: 
        </para>
        <itemizedlist>
            <listitem>
                <para> Authentication is the process of confirming
                    that you are who you say you are. For example, you
                    might be asked to authenticate your identity by
                    providing credentials such as a userid, password,
                    account number, or token. Authentication is often
                    abbreviated as Auth-N.</para> 
            </listitem>
            <listitem>
                <para> Authorization is the process of confirming that
                    you have permission to do what you are asking to
                    do. For example, your authenticated identity might
                    be checked against a list of the services to which
                    you have subscribed. Authrization is often
                    abbreviated as Auth-Z.</para>
            </listitem>
        </itemizedlist>
        <para>
            Both authentication and authorization processes are commonly used by software that requires users to register their identities and subscribe to specific services.
            You can configure your service to use &PRODNAME;'s authentication component to validate the identities of your users.
            For identities validated by the authentication component, 
            you can use the authorization component to confirm that the services being requested match those for which the user has permission.
        </para>
        <important>
            <para>
                If you wish to use &PRODNAME; for authorization, 
                you must first use it for authentication.
            </para>
        </important>
    </chapter>
    <chapter xml:id="Client-Authentication-001">
        <title>Client Authentication in &PRODNAME;</title>
        <para> 
            &PRODNAME;'s client authentication component enables the origin service to communicate with the
            authentication service implemented in its environment. &PRODNAME; calls 
            the authentication service and returning the results of
            authentication requests to the origin service. 
        </para>
        <para>
            The &PRODNAME; client authentication component acts as an HTTP reverse proxy. 
            It passes incoming HTTP requests to an external authentication service. 
            If the authentication service validates the request, &PRODNAME; adds header information to the 
            HTTP request and forwards it to the origin service. 
            If the authentication service rejects the request, &PRODNAME; returns the HTTP response to the client.
        </para>
        <figure xml:id="Authentication_Overview-figure">
            <title>Overview of the &PRODNAME; Client
                Authentication Component</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="figures/repose-authn-intro.png" format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            The &PRODNAME; client authentication component is implemented as an "Auth Component" as
            described in the "Authentication in OpenStack" blueprint at 
            <link xlink:href="http://wiki.openstack.org/openstack-authn">http://wiki.openstack.org/openstack-authn</link>.
             As such, 
             &PRODNAME;'s authentication lifecycle is directly derived from the blueprint, 
             which defines a standard for authentication. 
             Compliance with this standard enables services to support multiple authentication protocols in a pluggable manner.
            </para> 
        <section xml:id="Authentication_Configuration-d1e220">
            <title>Authentication Configuration</title>
            <para> Client authentication is divided into modules which
                represent different authentication schemes. Depending
                on the &PRODNAME; components being deployed, the
                authentication configuration may change. In the
                following example, we are configuring the
                    <code>client-auth</code> &PRODNAME; component to
                interact with the Rackspace Cloud Authentication
                Service. </para>
            <example>
                <title>Client Authentication Configuration: XML</title>
                <programlistingco>
                    <areaspec>
                        <area xml:id="repose-authn.xml.delegatable" units="linecolumn" coords="7 21"/>
                        <area xml:id="repose-authn.xml.server" units="linecolumn" coords="10 10"/>
                        <area xml:id="repose-authn.xml.uri" units="linecolumn" coords="11 13"/>
                        <area xml:id="repose-authn.xml.auth" units="linecolumn" coords="11 46"/>
                        <area xml:id="repose-authn.xml.regex" units="linecolumn" coords="13 29"/>
                        <area xml:id="repose-authn.xml.type" units="linecolumn" coords="13 56"/>
                    </areaspec> 
                    <programlisting language="xml">
<xi:include href="samples/papi-authn.xml" parse="text"/>
                </programlisting>
                </programlistingco>     
            </example>
            <para> Key elements of the preceding example are labeled with callouts and explained below: </para>
            <calloutlist>
                <callout arearefs="repose-authn.xml.delegatable">
                    <para> All &PRODNAME; authentication modules support authentication
                        <firstterm>delegation</firstterm>. Delegation may be enabled or disabled by
                        setting the <code>rackspace-auth delegatable</code> attribute to <code>true</code> or <code>false</code>. To better
                        protect services, delegation always defaults to <code>false</code>. 
                    </para>
                    <para>
                        For more about delegation, please refer to the "Authentication in OpenStack" blueprint at 
                        <link xlink:href="http://wiki.openstack.org/openstack-authn">http://wiki.openstack.org/openstack-authn</link>.
                    </para>
                    <para> </para>
                </callout>
                <callout arearefs="repose-authn.xml.server">
                    <para> The <firstterm><code>authentication-server</code></firstterm> configuration
                        element identifies an authentication endpoint. Tokens are validated against this
                        endpoint. While a password is required in the configuration file, it is
                        important to note that file permissions can be set to make the configuration
                        file user-readable only and therefore more secure. </para>
                    <para> </para>
                </callout>
                <callout arearefs="repose-authn.xml.uri">
                    <para> The <firstterm><code>URI</code></firstterm>
                        attribute of the
                            <code>authentication-server</code>
                        configuration element identifies a destination
                        to which the component must route token
                        validation requests. This URI must include all
                        information required to construct an HTTP
                        request, including the authentication
                        service's context root and the port number on
                        which the authentication service is listening. </para>
                    <para> </para>
                </callout>
                <callout arearefs="repose-authn.xml.auth">
                    <para> 
                        The authentication service's context root is <firstterm>/auth</firstterm> in this example.
                    </para>
                    <para> </para>
                </callout>
                <callout arearefs="repose-authn.xml.regex">
                    <para> Account mappings in the configuration inform the component of where to source
                        the identity string in client-requested URIs. This is achieved via a regular
                        expression (<firstterm>regex</firstterm>). In this regular expression, the
                        service implementor must specify a regular expression capture group which, when
                        executed, will capture the requesting client's identity string. This string will
                        then be sent to the authentication service. </para>
                    <para> </para>
                </callout>
                <callout arearefs="repose-authn.xml.type">
                    <para> The <firstterm><code>type</code></firstterm> attribute identifies the type of
                        account associated with this authentication request. In this example, the
                        account is of type <code>CLOUD</code>. Valid account types vary depending on the
                        requirements of the authentication service, so you should refer to the
                        documentation describing the authentication service that you use. For example, the
                        Rackspace Cloud Authentication Service v1.1 is documented at
                        <link xlink:href="http://docs.rackspace.com/auth/api/v1.1/auth-client-devguide-latest.pdf">http://docs.rackspace.com/auth/api/v1.1/auth-client-devguide-latest.pdf</link>.
                    </para>
                    <para> </para>
                </callout>
            </calloutlist>
        </section>  
        <section xml:id="Authentication_Schemes-d1e230">
            <title>Authentication Schemes</title>
            <para> The &PRODNAME; client authentication component is
                designed to allow selection from a list of supported
                authentication schemes. The list of supported
                authentication schemes is:</para>
            <itemizedlist>
                <listitem>
                    <para>
                        <link
                            linkend="Authentication_Scheme_OpenStack_Identity-d1e237"
                            >OpenStack Identity Service
                            Authentication</link>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <link linkend="Authentication_Scheme_Rackspace_Auth11-d1e235">Rackspace Cloud Auth 1.1 Authentication</link>
                    </para>
                </listitem>
            </itemizedlist>
            <section xml:id="Authentication_Scheme_OpenStack_Identity-d1e237">
                <title>OpenStack Identity Service Authentication</title>
                <para>
                    The &PRODNAME; client authentication component supports the OpenStack Identity Service authentication scheme.
                    Using this authentication scheme, the &PRODNAME; client authentication component may be configured to interact with 
                    Keystone or Rackspace Cloud Auth 2.0 (both of which implement the OpenStack Identity Service contract) when validating user credentials.
                </para>
                <figure xml:id="Authentication_OpenStack-Lifecycle-figure">
                    <title>Request/Response Lifecycle for Authentication by the OpenStack Identity Service</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="figures/repose-authn-openstack-lifecycle.png" format="PNG" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    At a high level, the request/response lifecycle is:
                    <orderedlist>
                         <listitem>
                           <para>The client authentication component receives a request from the client.</para>
                           <para>
                               The incoming HTTP request must have a URI and a token
                               in the <code>X-Auth-Token</code> request header.
                               The URI may contain the tenant ID.
                           </para>
                        </listitem>
                        <listitem>
                            <para>The authentication filter parses the URI in the request, extracting the tenant ID and token.</para>
                            <para>
                                &PRODNAME;'s authentication filter parses the URI using a configurable regular expression
                                (<code>id-reg</code> in the <code>client-auth-n-cfg.xml</code> file)
                                to extract the tenant ID.
                                If the tenant ID is missing,
                                &PRODNAME; does not call the external authentication component;
                                instead, &PRODNAME; sets the <code>X-Authorization</code> header with no user entry (for example, <code>X-Authorization: Proxy</code>).
                                If the origin service is configured to run in delegated mode, 
                                then the <code>X-Identity-Status</code> HTTP header is set to a value of <code>Indeterminate</code>.
                                The request is then passed along to the origin service with the <code>X-Authorization</code> and <code>X-Identity-Status</code>
                                request headers set as described above.
                            </para>
                            <para>
                                The &PRODNAME; client authentication component identifies whether the origin service is in delegated mode 
                                based on the Boolean value of the <code>delegatable</code> attribute in the <code>client-auth-n-cfg.xml</code> file.
                            </para>
                            <para>
                                If the tenant ID is missing and the origin service is not running in delegated mode 
                                (<code>delegatable="false"</code> in the <code>client-auth-n-cfg.xml</code> file), 
                                then the &PRODNAME; client authentication component does not forward the request to the origin service.
                                Instead, the &PRODNAME; client authentication component returns a <errorcode>401</errorcode> to the client.
                            </para>
                            <para>
                                The incoming HTTP request's <code>X-Auth-Token</code> header does not have an authentication token,
                                then &PRODNAME; performs the same steps as when the tenant ID is missing.
                                Both the tenant ID and the <code>X-Auth-Token</code> must be present before &PRODNAME; attempts to validate user credentials. 
                            </para>
                        </listitem>
                        <listitem>
                            <para>&PRODNAME; sends a token validation
                                request to an external authentication
                                service.</para>
                            <para> If the &PRODNAME; authentication
                                component successfully obtains the
                                tenant ID and the token from the
                                request, then &PRODNAME; sends a
                                request to the external authentication
                                service. </para> 
                            <table rules="all">
                                <caption>Handling of
                                   Valid and Invalid Tokens with
                                   OpenStack Authentication</caption>
                                <col width="50%"/>
                                <col width="50%"/>
                                <thead>
                                   <tr>
                                   <th>If token is valid</th>
                                   <th>If token is not valid</th>
                                   </tr>
                                </thead>
                                <tbody>
                                   <tr>
                                   <td>
                                       <orderedlist>
                                           <listitem>
                                               <para>
                                                   Using the user ID from the validated token, 
                                                   perform another request against the external authentication service
                                                   to retrieve the user's groups.
                                               </para>
                                           </listitem>
                                           <listitem>
                                               <para>Add the groups to the <code>X-PP-Groups</code> request header, to be consumed by the &PRODNAME; rate limiting component.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Add the user ID to the <code>X-PP-User</code> request header, to be consumed by the &PRODNAME; rate limiting component.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Set the <code>X-User-Name</code> header with the username returned in the validated token object.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Set the <code>X-User-Id</code> header with the user ID returned in the validated token object.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Set the <code>X-Tenant-Id</code> header with the tenant ID extracted from the URL.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Set the <code>X-Roles</code> header with the roles returned in the validated token object.</para>
                                           </listitem>
                                           <listitem>
                                               <para>Set the <code>X-Authorization</code> header to <code>Proxy userid</code>.</para>
                                           </listitem>
                                           <listitem>
                                               <para>If <code>delegegateable=true</code>, then set <code>X-Identity-Status</code>to <code>Indeterminate</code>.</para>
                                           </listitem>
                                           <listitem>
                                               <para>If <code>delegegateable=true</code>, then pass the updated request to the origin service.</para>
                                           </listitem>
                                       </orderedlist>
                                   </td> 
                                   <td>
                                   <orderedlist>
                                        <listitem>
                                            <para>Set the <code>X-Authorization</code> header to <code>Proxy userid</code>.</para>
                                        </listitem>
                                        <listitem>
                                            <para>If <code>delegegateable=true</code>, then set <code>X-Identity-Status</code>to <code>Indeterminate</code>.</para>
                                        </listitem>
                                       <listitem>
                                           <para>If <code>delegegateable=true</code>, then pass the updated request to the origin service.</para>
                                       </listitem>
                                   </orderedlist>
                                   </td>
                                   </tr>
                                </tbody>
                            </table><para> The &PRODNAME;
                                authentication component handles the
                                response from the origin service as
                                described in the "Authentication in
                                OpenStack" blueprint at <link
                                   xlink:href="http://wiki.openstack.org/openstack-authn"
                                   >http://wiki.openstack.org/openstack-authn</link>.
                            </para>
                        </listitem>
                        <listitem>
                            <para>The &PRODNAME; authentication component returns the request to the &PRODNAME; filter chain for further processing.</para>
                        </listitem>
                        <listitem>
                            <para>When all processing is complete, either the request is passed on to the origin service 
                                or a response is sent to the client.</para>
                        </listitem>
                    </orderedlist>
                </para>
            </section>
            <section xml:id="Authentication_Scheme_Rackspace_Auth11-d1e235">
                <title>Rackspace Cloud Auth 1.1 Authentication</title>
                <para>
                    The &PRODNAME; authentication component supports the
                    Rackspace Cloud Auth 1.1 authentication scheme.
                </para>
                <figure xml:id="Authentication_RAX-Lifecycle-figure">
                    <title>Request/Response Lifecycle for Authentication by Rackspace Auth 1.1</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="figures/repose-authn-rax-lifecycle.png" format="PNG" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>
                    At a high level, the request/response lifecycle is:
                    <orderedlist>
                        <listitem>
                            <para>The client authentication component receives a request from the client.</para>
                            <para>
                                The incoming HTTP request must have a URI and a token
                                in the <code>X-Auth-Token</code> request header.
                                The URI may contain the tenant ID.
                            </para>
                        </listitem>
                        <listitem>
                            <para>The authentication filter parses the URI in the request, extracting the tenant ID and token.</para>
                        </listitem>
                        <listitem>
                            <para>&PRODNAME; sends a token validation request to an external authentication service.</para>
                        </listitem>
                        <listitem>
                            <para>The &PRODNAME; authentication component caches the user's token until the token's expiration time.</para>
                        </listitem>
                        <listitem>
                            <para>The &PRODNAME; authentication component returns the request to the &PRODNAME; filter chain for further processing.</para>
                        </listitem>
                        <listitem>
                            <para>When all processing is complete, either the request is passed on to the origin service 
                                or a response is sent to the client.</para>
                        </listitem>
                    </orderedlist>
                </para>
            </section>
        </section>
        <section xml:id="Authentication_Tests-d1e250">
            <title>Authentication Tests</title>
            <para> The authentication test suite is summarized in the
                Repose wiki at <?sbr?>
                <link xlink:href="http://wiki.openrepose.org/display/REPOSE/Client+Authentication+Filter"
                    >http://wiki.openrepose.org/display/REPOSE/Client+Authentication+Filter</link>.
                You can adapt those tests to work within
                your own &PRODNAME; configuration. </para>
        </section>
    </chapter>
    <chapter xml:id="Client-Authorization-002">
        <title>Client Authorization in &PRODNAME;</title>
        <para> The client authorization service filter enables the
            service implementer to validate that a client's request is
            allowed. <itemizedlist>
                <listitem>
                    <para> If the client's request is allowed, then
                        the request is passed through without any
                        changes. </para>
                </listitem>
                <listitem>
                    <para> If the client's request is not allowed,
                        then the request is denied with an HTTP
                            <errorcode>403</errorcode> (forbidden)
                        response. </para>
                </listitem>
            </itemizedlist> A request is considered authorized if any
            of the endpoints in the client's endpoint list start with
            the service endpoint associated with the requested
            component. For example, if an authenticated client
            requests the compute service, and that client's endpoint
            list (also known as a service catalog) includes an
            endpoint for the compute service, then the client is
            authorized to use the compute service and the client's
            request is forwarded to the compute service for further
            processing.</para>
        <para>
            The &PRODNAME; authorization component's decision flow is summarized in the drawing below:
        </para>
        <figure xml:id="Authorization_Decisions-figure">
            <title>Decision Flow in the &PRODNAME; Client
                Authorization Component</title>
            <!--this is now PNG from openrepose wiki; retry as SVG when I find John's email attachment-->
            <mediaobject>
                <imageobject>
                    <imagedata fileref="figures/repose-authz-decisions.png" format="PNG" align="center"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            As shown above, 
            the authorization component must be configured to represent a valid endpoint.
            The client receives a token as a result of successful authentication; the identity server uses the client's token to retrieve the client's endpoint list. 
            The authorization component then compares the configured endpoint against the authenticated client's endpoint list.
        </para>
        <important>
            <para>
                The authorization component assumes that any requests passed to it
                have already been authenticated.
            </para>
        </important>
        <section xml:id="Authorization_Schemes-d1e320">
            <title>Authorization Schemes</title>
            <para> The &PRODNAME; client authorization component is
                designed to allow selection from a list of supported
                authorization schemes. The list of supported
                authorization schemes is:</para>
            <itemizedlist>
                <listitem>
                    <para> 
                        <link linkend="Authorization_Scheme_OpenStack_Identity-d1e325">OpenStack Identity Request Authorization</link>
                    </para>
                </listitem>
            </itemizedlist>
            <section xml:id="Authorization_Scheme_OpenStack_Identity-d1e325">
                <title>OpenStack Identity Request Authorization</title>
                <para>In the following authorization configuration,
                        <code>rackspace-authorization</code> specifies
                        the <code>openstack-identity</code>
                    authorization scheme and
                        <code>service-endpoint</code> specifies a
                    Rackspace service.</para>
                <example>
                    <title>Client Authorization Configuration for OpenStack Identity: XML</title>
                        <programlisting language="xml">
<xi:include href="samples/repose-authz-config-openstack.xml" parse="text"/>
                </programlisting>    
                </example>
                <para> 
                    The &PRODNAME; authorization component must be
                    able to communicate with an OpenStack identity
                    server to obtain a client's endpoint list. You
                    make this possible by defining
                    <code>rackspace-authorization</code> in your
                    &PRODNAME; configuration. This configuration
                    element informs the authorization component how to
                    contact the OpenStack identity server, which
                    credentials to use when contacting the OpenStack
                    identity server, and how long to cache responses
                    from the OpenStack identity server. 
                </para>
                    <table rules="all">
                    <caption>Authorization Server Configuration
                        Element Attributes</caption>
                    <col width="20%"/>
                    <col width="10%"/>
                    <col width="10%"/>
                    <col width="50%"/>
                    <thead>
                        <tr>
                            <th>Configuration Attribute</th>
                            <th>Type</th>
                            <th>Required?</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>username</code></td>
                            <td>string</td>
                            <td>YES</td>
                            <td>The username to send to the OpenStack
                                identity server when authenticating
                                the component for admin calls</td>
                        </tr>
                        <tr>
                            <td><code>password</code></td>
                            <td>string</td>
                            <td>YES</td>
                            <td>The password to send to the OpenStack
                                identity server when authenticating
                                the component for admin calls</td>
                        </tr>
                        <tr>
                            <td><code>href</code></td>
                            <td>anyURI</td>
                            <td>YES</td>
                            <td>The full, valid URL of the OpenStack
                                identity server</td>
                        </tr>
                        <tr>
                            <td><code>endpoint-list-ttl</code></td>
                            <td>int</td>
                            <td>NO</td>
                            <td>Duration in seconds for how long the
                                component will cache (time to live
                                (TTL)) a valid endpoint-list from the
                                OpenStack identity server</td>
                        </tr>
                    </tbody>
                </table>
                <para> The authorization component must be able to
                    identify which service it represents when
                    inspecting a client's endpoint list. The
                        <code>service-endpoint</code> configuration
                    element informs the authorization component of the
                    service endpoint's public URL. If the service
                    endpoint's public URL matches one of the endpoints
                    in the client's endpoint list, the client is
                    authorized to use that service.
                    <table rules="all">
                        <caption>Service Endpoint Configuration
                            Element Attributes</caption>
                        <col width="20%"/>
                        <col width="10%"/>
                        <col width="10%"/>
                        <col width="50%"/>
                        <thead>
                            <tr>
                                <th>Configuration Attribute</th>
                                <th>Type</th>
                                <th>Required?</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>href</code></td>
                                <td>anyURI</td>
                                <td>YES</td>
                                <td>A valid URL that can be used to
                                   match against the
                                   <code>publicURL</code> values in
                                   the client's endpoint list.</td>
                            </tr>
                        </tbody>
                    </table>
                    <warning>
                        <para> In a client's endpoint list (also known
                            as service catalog), each endpoint must
                            specify its <code>publicURL</code> and
                                <code>type</code> if the client is to
                            be authorized by using the &PRODNAME;
                            authorization service and the OpenStack
                            identity service. This is a requirement of
                            the OpenStack identity service contract.
                            If any required endpoint elements are null
                            for any endpoint in the client's endpoint
                            list, &PRODNAME; issues a warning: <itemizedlist>
                                <listitem>
                                   <para> If <code>publicURL</code> is
                                   null, the warning is <code>Endpoint
                                   Public URL is null. This is a
                                   violation of the OpenStack Identity
                                   Service contract.</code>
                                   </para>
                                </listitem>
                                <listitem>
                                   <para> If <code>type</code> is
                                   null, the warning is <code>Endpoint
                                   Type is null. This is a violation
                                   of the OpenStack Identity Service
                                   contract.</code>
                                   </para>
                                </listitem>
                            </itemizedlist> After issuing the
                            appropriate warning, &PRODNAME; ignores
                            the invalidly-specified endpoint and
                            continues processing the other endpoints
                            in the list. </para>
                    </warning></para>
            </section>
        </section>
        <section xml:id="Authorization_Tests-d1e327">
            <title>Authorization Tests</title>
            <para>You can adapt the tests described in this table to
                work within your own &PRODNAME; configuration.
                <table rules="all">
                    <caption>Authorization Test Suite
                        Summary</caption>
                    <col width="33%"/>
                    <col width="34%"/>
                    <col width="33%"/>
                    <thead>
                        <tr>
                            <th>Test</th>
                            <th>Sample Command</th>
                            <th>Expected Outcome</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>When authorizing requests in which
                                client authentication has been
                                delegated ...</td>
                            <td><code>curl -X GET -H "www-authenticate: delegated" --verbose http://repose-host/some/protected/resource</code></td>
                            <td>... service must return an HTTP
                                   <errorcode>403</errorcode>
                                (forbidden) response.</td>
                        </tr>
                        <tr>
                            <td>When authorizing requests in which
                                authentication information (username
                                and token) is not provided ...</td>
                            <td><code>curl -X GET --verbose http://repose-host/some/protected/resource</code></td>
                            <td>... service must return an HTTP
                                   <errorcode>401</errorcode>
                                (unauthorized) response.</td>
                        </tr>
                        <tr>
                            <td>When authorizing requests in which
                                authentication information (username
                                and token) is provided ...</td>
                            <!-- in <code>, replaced one < with &lt; so Author parses OK; come back later and retry as CDATA -->
                            <td><code>curl -X GET -H "x-auth-token: &lt;valid-token>" --verbose http://repose-host/some/protected/resource</code></td>
                            <td>... service must pass the request
                                downstream. </td>
                        </tr>
                    </tbody>
                </table></para>
        </section>
    </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>
