<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- product name is likely to change; parameterize full name, abbreviated name, expanded name -->
<!ENTITY PRODNAME "Repose">
<!ENTITY PRODABBREV "Repose">
<!ENTITY PRODEXPAND "REstful PrOxy Service Engine">
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<!-- in BOOK below, add status="draft" to set watermark on cover and left margin -->
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook" 
      xml:id="Repose-Ratelimiting-Deployment-Guide">
    <?rax pdf.url="../../repose-ratelimiting-deploy.pdf"?>
    <title>&PRODNAME; Rate Limiting Component Deployment Handbook</title>
    <!-- set watermark on cover and left margin 
        <?rax status.bar.text="CONFIDENTIAL"?>
    -->
    <?rax title.font.size="35px" subtitle.font.size="16px"?>
    <titleabbrev>&PRODABBREV; Rate Limiting Deployment</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>v2.3.4</releaseinfo>
        <productname>&PRODNAME;</productname>
        <pubdate>2012-10-31</pubdate>
        <legalnotice role="apache2">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for systems administrators interested in configuring
                their service to use the Rate Limiting component of the &PRODEXPAND;. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2012-10-31</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Deleted unused <code>Delegation</code> element from <xref
                                linkend="Configuration-d1e365"/>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-10-17</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Republished for Repose
                                v2.3.4.</para>
                        </listitem>
                        <listitem>
                            <para>Expanded <xref
                                   linkend="Configuration-d1e365"/>,
                                updating sample in that section and
                                adding information about
                                   <code>java.util.regex.Pattern</code>.</para>
                        </listitem>
                        <listitem>
                            <para>Expanded <xref
                                   linkend="Querying_Limits-d1e531"/>,
                                adding sample conversations and
                                details about headers and
                                quality.</para>
                        </listitem>
                        <listitem>
                            <para>Expanded <xref
                                   linkend="Absolute-d1e631"/>, adding
                                examples of absolute limits returned
                                by origin service.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-01-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem><para>Republished for Repose v1.0.</para></listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-09-23</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Expanded explanatory notes supporting sample code in <xref linkend="Configuration-d1e365"></xref>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-09-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial release for v0.9.</para>
                        </listitem>
                        <listitem>
                            <para>Revised code samples and formatting to address feedback from early technical reviewers.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2011-07-07</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem><para>Initial release as internal draft.</para></listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <chapter xml:id="Overview-d1e85">
        <title>About This Document</title>
            <para> 
                The purpose of this handbook is to facilitate deployment of &PRODNAME;'s rate
                limiting component. This handbook is not a tutorial. It provides basic information
                that will help you understand and deploy this &PRODNAME; component, but you must
                adapt this information to suit your own configuration. 
            </para>  
            <para>
                This handbook is focused on one &PRODNAME; component.
                Other &PRODNAME; components are documented in companion handbooks.
            </para>
        <section xml:id="Document_Change_History-d1e102">
            <title>Document Change History</title>
            <para>This version of the handbook replaces and obsoletes all previous versions.
            The most recent changes are described in the table below: </para>
            <?rax revhistory?>
        </section>
        <xi:include href="chapters/available-doc.xml"/>
    </chapter>
    <!-- naming this section xml:id="Introduction-000" to make it the first page opened in HTML, matching <webhelpDefaultTopic>Introduction-000.html</webhelpDefaultTopic> in pom.xml -->
    <chapter xml:id="Introduction-000">
        <title>Introduction to the Rate Limiting Component of &PRODNAME;</title>
        <para> Rate limiting controls the flow of traffic. You can use
            &PRODNAME;'s rate limiting filter to manage the flow of
            traffic into your service so that it does not exceed the
            service's actual capacity. In addition to allowing you to
            manage legitimate workloads, this allows you to prevent
            overload due to abuse of your system. </para>
        <para> To understand how &PRODNAME; handles rate limiting, you
            must understand the relationship between &PRODNAME; and an
            origin service. An origin service is the service for which
            &PRODNAME; is performing a function. For example, if
            &PRODNAME; is used to provide rate limiting to a
            load-balancing service, then the load-balancing service is
            &PRODNAME;'s origin service. Requests are sent to
            &PRODNAME; as the proxy for the origin service, not to the
            server where the origin service lives. &PRODNAME;
            functions as a reverse proxy, in that it acts on behalf of
            the origin service rather than on behalf of the client.
            &PRODNAME; passes client requests to the origin service
            only after those requests have been examined and processed
            by the &PRODNAME; filters configured for that origin
            service. </para>
        <para> &PRODNAME;'s rate limiting filter protects the origin
            service from being bombarded by client requests. It
            accomplishes this by specifying limits for the number of
            times a client may request a given resource. When a client
            has exceeded the number of requests permitted during the
            current time period, no further requests from that client
            are delivered to the origin service until a new time
            period begins. This provides essential protection to any
            public-facing API. </para>
        <para>
            A client's current limits may include the
            client's absolute limits. Absolute limits are specific to a service domain and are
            therefore only provided by the origin service. 
            However, &PRODABBREV; will integrate absolute and current limits as they apply to a client.
        </para>
        <para> &PRODABBREV; does not enforce absolute limits, but it
            does inform the origin service of those limits. You can
            learn more about absolute limits at <xref
                linkend="Absolute-d1e631"/>. </para>
        <para>
            The &PRODNAME; rate limiting component performs two categories of behavior:
            <itemizedlist>
                <listitem>
                    <para>
                      <link linkend="Querying_Limits-d1e531">querying for limits</link> 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <link linkend="Tracking_Requests-d1e431">tracking limits</link>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <tip>
            <para> Rate limits are controlled by
                    <code>rate-limiting.cfg.xml</code>; to change your
                rate limiting configuration, edit
                    <code>rate-limiting.cfg.xml</code>. You can see an
                annotated example of
                    <code>rate-limiting.cfg.xml</code> in <xref
                    linkend="Configuration-d1e365"/>. </para>
        </tip>
    </chapter>
    <chapter xml:id="HTTP_Message_Requirements-d1e222">
        <title>HTTP Message Requirements</title>
        <para> To correctly rate limit a requested resource, the rate limiting component uses one
        required HTTP header precondition and one optional HTTP header precondition. </para>
        
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>HTTP Request Headers</caption>
            <thead>
                <tr>
                    <td>Header</td>
                    <td>Purpose</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <para>
                            <code>X-PP-User</code>
                        </para>    
                        <para>
                            <emphasis>Required</emphasis>
                        </para>
                    </td>
                    <td>
                        <para>
                        <code>X-PP-User</code> is a single-value header. This header is used to
                        describe the unique name of the client making the request. This name is
                        used in part to cache and store request hits.
                        </para>    
                    </td>
                </tr>
                <tr>
                    <td>
                        <para>
                            <code>X-PP-Groups</code>
                        </para>
                        <para>
                            <emphasis>Optional</emphasis>
                        </para>
                    </td>
                    <td>
                        <para>
                        <code>X-PP-Groups</code> is a list of string values. This header is used to
                        describe all of the limit groups the client belongs to. A client may
                        belong to multiple limit groups or to none.
                        </para>
                    </td>
                </tr>
            </tbody>
        </table>
        <para>
            These headers are used by the rate limiting filter but are populated by other &PRODNAME; components such as the authentication filter. 
        </para>
        <para>
            &PRODNAME; filters may add values to HTTP message headers to communicate a set of options to downstream filters. 
            To aid downstream filters in selecting the most qualified value from a given set, 
            the values themselves may be annotated with a quality factor parameter. 
            This allows downstream components to make a decision based on the available options rather then on which component overwrote the header last.
        </para>
        <tip>
            <para>
                To learn more about &PRODNAME;'s authentication filter, read about 
                <link xlink:href="http://wiki.openrepose.org/display/REPOSE/Client+Authentication+Filter">Client Authentication</link>
                in our wiki
                or read the Repose Auth-N &amp; Auth-Z Components Deployment Handbook.
            </para>
            <para>
                To learn more about quality factors in HTTP message headers, read about 
                <link xlink:href="http://wiki.openrepose.org/display/REPOSE/Header+Value+Quality">Header Value Quality</link>
                in our wiki.
            </para>
        </tip>
    </chapter>
    <chapter xml:id="Configuration-d1e365">
        <title>Configuration</title>
        <tip>
            <para> Before attempting to customize your rate limiting
                configuration, familiarize yourself with the basic
                &PRODNAME; concepts and deployment methods in our
                Getting Started document. </para>
        </tip>
        <para> The rate limiting component obtains its configuration,
            including its API endpoint, from a file named
                <code>rate-limiting.cfg.xml</code>. We have included
            an annotated example of a valid
                <code>rate-limiting.cfg.xml</code> in this
            section.</para>
        <para> To change your rate limiting configuration, edit
                <code>rate-limiting.cfg.xml</code> at any time. Within
                <code>rate-limiting.cfg.xml</code>, you can specify
            the following: </para> 
        <table rules="all">
            <caption>Customizable Elements of the Rate Limiting
                Configuration</caption>
            <thead>
                <tr>
                    <th>Element</th>
                    <th>Attribute</th>
                    <th>Parameter</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td rowspan="4"><emphasis role="bold"
                            >Endpoint</emphasis>: <?sbr?>
                        <code>&lt;request-endpoint&gt;</code> sets the
                        endpoint and format with which the user can
                        query limits. </td>
                    <td colspan="2"/>
                </tr>
                <tr>
                    <td>
                        <code>&lt;uri-regex&gt;</code> is a regular
                        expression (regex) for the URI at which the
                        user can query their limits. Within the regex,
                        each capture group is allowed the number of
                        hits specified in the value attribute of the
                        limit element. For example, suppose the
                        configuration specifies a regex of
                            <literal>/v1/(.*)</literal> with
                            <code>value</code> set to 100. With this
                        configuration, some requests come in with a
                        URI of <code>/v1/pan</code> and other requests
                        come in with a URI of <code>/v1/cake</code>.
                        Each user would be allowed 200 hits if the
                        hits are evenly divided among the two URIs:
                        100 hits for URI <code>/v1/pan</code> and 100
                        hits for URI <code>/v1/cake</code>. </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <code>&lt;include-absolute-limits&gt;</code>
                        enables or disables integration with absolute
                        limits. </td>
                    <td/>
                </tr>
                <tr>
                    <td><code>&lt;limits-format&gt;</code> identifies
                        the format of returned rate limits.</td>
                    <td><code>OPENSTACK</code>, the format supported
                        by OpenStack. You can learn about this format
                        at <link
                            xlink:href="http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html"
                            >http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html</link>.
                    </td>
                </tr>
                <tr>
                    <td rowspan="5"><emphasis role="bold">
                            Group</emphasis>: <?sbr?>
                        <code>&lt;limit-group&gt;</code> is a list of
                        rate limits to be applied to a user, based on
                        the user's membership in a group. </td>
                    <td colspan="2"/>
                </tr>
                <tr>
                    <td><code>&lt;id&gt;</code> is the unique
                        identifier for a given limit group </td>
                    <td/>
                </tr>
                <tr>
                    <td><code>&lt;groups&gt;</code> is a
                        space-delimited list of the groups to which
                        this limit group will apply </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <para>
                        <code>&lt;default&gt;</code> identifies the
                        limit group that will be applied if a user is
                        passed in either of these conditions: 
                        <itemizedlist>
                            <listitem>
                                <para> no group is specified </para>
                            </listitem>
                            <listitem>
                                <para> no group in the rate limiting
                                   configuration matches the group or
                                   groups specified </para>
                            </listitem>
                        </itemizedlist>
                        </para>
                    </td>
                    <td/>
                </tr>
                <tr>
                    <td>
                        <para>
                        <code>&lt;limit&gt;</code> describes limits
                        configured for a given endpoint. 
                        </para>
                    </td>
                    <td>
                        <para>
                            <itemizedlist>
                                <listitem>
                                    <para>
                                        <code>&lt;uri&gt;</code> is a
                                        human-readable URI describing the
                                        endpoint for a given configured
                                        limit </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;uri-regex&gt;</code> is
                                        the regex used to match a passing
                                        request to current limit group
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;http-methods&gt;</code>
                                        lists the HTTP methods associated
                                        with this limit. Valid values
                                        include: GET, DELETE, POST, PUT,
                                        HEAD, OPTIONS, CONNECT, TRACE, ALL
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;unit&gt;</code> is the
                                        unit of time associated with this
                                        limit. Valid values include:
                                        SECOND, MINUTE, HOUR, DAY</para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <code>&lt;value&gt;</code> is the
                                        number of requests allowed within
                                        the configured unit of time</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </td>
                </tr>
            </tbody>
        </table>
        <itemizedlist security="writeronly">
            <!-- hide bulleted list format until confirmed that table format is correct -->
            <listitem>
                <para><emphasis role="bold">Delegation</emphasis>:
                    <?sbr?> If set to <code>true</code> and the
                    identified user has reached a rate limit,
                    &PRODNAME; rate limiting will not return the
                    response directly to the client. Instead,
                    &PRODNAME; will set an
                        <code>X-PP-Rate-Limited</code> header to a
                        <code>Retry-After</code> date for the next
                    available non-rate limited request and send the
                    request on to the origin service. </para>
            </listitem>
            <listitem>
                <para><emphasis role="bold">Endpoint</emphasis>: <?sbr?>
                    <code>&lt;request-endpoint&gt;</code> sets the
                    endpoint and format with which the user can query
                    limits. </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <code>&lt;uri-regex&gt;</code> is a
                            regular expression (regex) for the URI at
                            which the user can query their limits.
                            Within the regex, each capture group is
                            allowed the number of hits specified in
                            the value attribute of the limit element.
                            For example, suppose the configuration
                            specifies a regex of
                                <literal>/v1/(.*)</literal> with
                                <code>value</code> set to 100. With
                            this configuration, some requests come in
                            with a URI of <code>/v1/pan</code> and
                            other requests come in with a URI of
                                <code>/v1/cake</code>. Each user would
                            be allowed 200 hits if the hits are evenly
                            divided among the two URIs: 100 hits for
                            URI <code>/v1/pan</code> and 100 hits for
                            URI <code>/v1/cake</code>. </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;include-absolute-limits&gt;</code>
                            enables or disables integration with
                            absolute limits. </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;limits-format&gt;</code>
                            identifies the format of returned rate
                            limits. Valid values include: <itemizedlist>
                                <listitem>
                                   <para>
                                   <code>OPENSTACK</code>, the format
                                   supported by OpenStack. You can
                                   learn about this format at <link
                                   xlink:href="http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html"
                                   >http://docs.openstack.org/api/openstack-compute/2/content/ProgramaticLimits.html</link>.
                                   </para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </itemizedlist>
            </listitem>
            <listitem>
                <para><emphasis role="bold"> Group</emphasis>: <?sbr?>
                    <code>&lt;limit-group&gt;</code> is a list of rate
                    limits to be applied to a user, based on the
                    user's membership in a group. </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <code>&lt;id&gt;</code> is the unique
                            identifier for a given limit group </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;groups&gt;</code> is a
                            space-delimited list of the groups to
                            which this limit group will apply </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;default&gt;</code> identifies
                            the limit group that will be applied if a
                            user is passed in either of these
                            conditions: <itemizedlist>
                                <listitem>
                                   <para> no group is specified
                                   </para>
                                </listitem>
                                <listitem>
                                   <para> no group in the rate
                                   limiting configuration matches the
                                   group or groups specified </para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>&lt;limit&gt;</code> describes
                            limits configured for a given endpoint: <itemizedlist>
                                <listitem>
                                   <para>
                                   <code>&lt;uri&gt;</code> is a
                                   human-readable URI describing the
                                   endpoint for a given configured
                                   limit </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;uri-regex&gt;</code> is
                                   the regex used to match a passing
                                   request to current limit group
                                   </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;http-methods&gt;</code>
                                   lists the HTTP methods associated
                                   with this limit. Valid values
                                   include: GET, DELETE, POST, PUT,
                                   HEAD, OPTIONS, CONNECT, TRACE, ALL
                                   </para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;unit&gt;</code> is the
                                   unit of time associated with this
                                   limit. Valid values include:
                                   SECOND, MINUTE, HOUR, DAY</para>
                                </listitem>
                                <listitem>
                                   <para>
                                   <code>&lt;value&gt;</code> is the
                                   number of requests allowed within
                                   the configured unit of time</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
        <para>
            Your rate limiting configuration in <code>rate-limiting.cfg.xml</code> will resemble the following example:
        </para>
        <example>
            <title>Rate Limiting Configuration: XML</title>
            <programlistingco>
                <areaspec>
                    <area xml:id="cfg.xml.request-endpoint"
                        units="linecolumn" coords="5 22"/>
                    <area xml:id="cfg.xml.uri-regex"
                        units="linecolumn" coords="5 32"/>
                    <area xml:id="cfg.xml.include-absolute-limits"
                        units="linecolumn" coords="6 32"/>
                    <area xml:id="cfg.xml.limit-group"
                        units="linecolumn" coords="8 17"/>
                    <area xml:id="cfg.xml.id" units="linecolumn"
                        coords="8 21"/>
                    <area xml:id="cfg.xml.groups" units="linecolumn"
                        coords="9 15"/>
                    <area xml:id="cfg.xml.default" units="linecolumn"
                        coords="9 35"/>
                    <area xml:id="cfg.xml.limit" units="linecolumn"
                        coords="10 15"/>
                </areaspec>
                <programlisting language="xml">
<xi:include href="samples/repose-ratelimit.xml" parse="text"/>
            </programlisting>
            </programlistingco>
        </example>
        <para> Key elements of the preceding example are labeled with
            callouts and explained below: </para>
        <calloutlist>
            <callout arearefs="cfg.xml.request-endpoint">
                <para> The <code>request-endpoint</code> configuration
                    element must specify a regular expression that
                    identifies client requests for the client's
                    current limits. </para>
                <para>This element is
                    <emphasis>required</emphasis>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.uri-regex">
                <para> The <code>uri-regex</code> attribute of the
                        <code>request-endpoint</code> configuration
                    element must be a regular expression. It should
                    match all representations of the request resource
                    that the rate limiting component should answer. </para>
                <para>This attribute is
                    <emphasis>required</emphasis>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.include-absolute-limits">
                <para> The <code>include-absolute-limits</code>
                    attribute of the <code>request-endpoint</code>
                    configuration element is a Boolean attribute that
                    can be used to switch on or off integration with
                    the origin service's absolute limits. </para>
                <para>This attribute is
                    <emphasis>optional</emphasis>.</para>
                <para>Acceptable values are <code>TRUE</code>,
                        <code>FALSE</code>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.limit-group">
                <para> One or more specifications of
                        <code>limit-group</code> may be associated
                    with a single specification of
                        <code>request-endpoint</code>. </para>
                <para> Limit groups identify a group of related rate
                    limits and bind them to a series of names. The
                    names can be used to limit incoming requests using
                    the <code>X-PP-Groups</code> header. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.id">
                <para> An <code>id</code> uniquely identifies each
                        <code>limit-group</code>.</para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.groups">
                <para> Specifying <code>groups</code> for a
                        <code>limit-group</code> associates it with
                    recognizable workloads. In this example, one
                        <code>limit-group</code> relates to customers
                    and another relates to administrators. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.default">
                <para> A single <code>limit-group</code> may be
                    identified as the <code>default</code> group. The
                        <code>default</code> group will handle any
                    requests that cannot be matched on the basis of a
                    group name to any of the groups identified in the
                        <code>X-PP-Groups</code> header. In this
                    example, the limits defined for
                        <code>groups="customer"</code> will be applied
                    to requests that cannot be explicitly matched to a
                    group. </para>
                <para> </para>
            </callout>
            <callout arearefs="cfg.xml.limit">
                <para>
                    <code>limit</code> and its attributes are
                    discussed in <xref
                        linkend="Configuring_Limits-d1e376"/>. </para>
                <para> </para>
            </callout>
        </calloutlist>
        <section xml:id="Configuring_Limits-d1e376">
            <title>Configuring Limits</title>
            <para> To set a rate limit, assign acceptable values to
                the rate limiting configuration attributes as shown in
                the table below. You can see these attributes in
                context in the code sample introducing <xref
                    linkend="Configuration-d1e365"/>. </para>
            <table border="1" frame="box">
                <?dbfo keep-together="always"?>
                <caption>Configuring Limits</caption>
                <thead>
                    <tr>
                        <td>Attribute</td>
                        <td>Description</td>
                        <th>Acceptable Values</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>uri</code>
                        </td>
                        <td> The <code>uri</code> attribute of a given
                            limit should be a human-readable
                            representation of the regular expression
                            used to match this limit. The URI is
                            useful for client end-user interfaces as
                            well as for documentation purposes. </td>
                        <td><emphasis>any valid URI</emphasis></td>
                    </tr>
                    <tr>
                        <td><code>uri-regex</code></td>
                        <td>The <code>uri-regex</code> attribute must
                            be a regular expression and should match
                            all request resource representations to
                            which the given limit should apply. </td>
                        <td><emphasis>any valid regex</emphasis></td>
                    </tr>
                    <tr>
                        <td><code>http-methods</code></td>
                        <td> Limits can trigger on specific HTTP
                            methods. These trigger methods must be
                            specified by the <code>http-methods</code>
                            attribute. As the name implies, the
                            attribute may contain more than one value;
                            multiple values are delimited by spaces.
                            The rate limiting component supports all
                            valid HTTP methods as described by RFC
                            2616 at <link
                                xlink:href="http://www.ietf.org/rfc/rfc2616.txt"
                                >http://www.ietf.org/rfc/rfc2616.txt</link>.
                            If the configuration specifies
                                <code>ALL</code> for the
                                <code>http-methods</code> attribute,
                            this informs the rate limiting component
                            that rate limiting should occur on all
                            HTTP requests. </td>
                        <td><code>GET</code>, <code>DELETE</code>,
                                <code>POST</code>, <code>PUT</code>,
                                <code>HEAD</code>, <code>TRACE</code>,
                                <code>OPTIONS</code>,
                                <code>CONNECT</code>,
                            <code>ALL</code></td>
                    </tr>
                    <tr>
                        <td><code>unit</code></td>
                        <td> Every limit must specify a time unit
                            specified by the <code>unit</code>
                            attribute. The valid values for this
                            attribute are also enumerated in the
                            OpenStack limits XML Schema Definition
                            (XSD) at <link
                                xlink:href="http://docs.openstack.org/common/api/v1.0"
                                >http://docs.openstack.org/common/api/v1.0</link>. </td>
                        <td><code>SECOND</code>, <code>MINUTE</code>,
                                <code>HOUR</code>,
                            <code>DAY</code></td>
                    </tr>
                    <tr>
                        <td><code>value</code></td>
                        <td> A limit's <code>value</code> attribute is
                            an integer which describes the number of
                            requests the limit allows. In combination
                            with the <code>unit</code> attribute, the
                            number of requests within a slice of time
                            describes the rate for the given limit.
                            The rate is then used to perform rate
                            limiting. </td>
                        <td><emphasis>any integer</emphasis></td>
                    </tr>
                </tbody>
            </table>
            <important>
                <para> The <code>unit</code> and <code>value</code>
                    attributes must always be specified as pairs. For
                    example, <code>unit="SECOND" value="1"</code>
                    allows a rate of one request per second. </para>
            </important>
        </section>
        <section xml:id="Constructing_Cache_Keys-d1e378">
            <title>Constructing Cache Keys with Regular
                Expressions</title>
            <para> The rate limiting component must be able to track
                rate limits per resource. To effectively facilitate
                this, the rate limiting component attempts to generate
                a cache key from the limit's regular expression, as
                defined in its <code>uri-regex</code> attribute.
                Extracting cache keys from the regular expression is
                performed via regular expression capture groups. </para>
            <tip>
                <para>
                    Regular expression (regex) capture groups are essential in configuring the rate limiting component and
                    other &PRODNAME; components. Our 
                    <link linkend="References-d1e994">bibliography</link>
                    includes a link to an excellent source of information about
                    regex capture groups.
                </para>
            </tip>
            <para> If no capture groups are specified, then the entire
                request URI is used as a the cache key for the
                request. This is considered sub-optimal in most cases,
                since each unique resource representation will have
                requests made against it tracked separately. </para>
            <para> The rate limiting component uses the
                java.util.regex package to match character sequences
                against patterns specified by regular expressions. The
                patterns are defined in
                    <code>java.util.regex.Pattern</code>. You can
                learn about <code>java.util.regex.Pattern</code> at
                    <link
                    xlink:href="http://download.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"
                    >http://download.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html</link>. </para>
            <warning>
                <para> You can get an unexpected result by failing to
                    account for all components of a request URI. </para>
                <para> As you construct regular expressions, keep in
                    mind that query parameters as well as other
                    request URI components <emphasis role="bold"
                        >are</emphasis> included as part of the
                    request URI that the rate limiting component
                    operates against. </para>
            </warning>
            <para>The following examples may help you plan your own
                regular expressions: </para>
            <annotation>
                <remark> The ampersand character is used in regular
                    expressions but it's also used in DocBook XML
                    entities, and not ignored even inside code
                    wrappers, so it's problematic to include in these
                    examples. RegEx uses so many characters I can't
                    guess any I could assign as escapes, even if I was
                    sure escaping would work; for now, an ampersand to
                    be displayed in the RegEx sample is coded as
                    ampersand+a+m+p+semicolon. Check for similar
                    complications if you add any other RegEx examples.
                </remark>
            </annotation>
            <table border="1" frame="box">
                <?dbfo keep-together="always"?>
                <caption>Sample Regular Expressions</caption>
                <thead>
                    <tr>
                        <td>RegEx</td>
                        <td>Discussion</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <code>/service/.*</code>
                        </td>
                        <td>
                            <para> This is a blanket regular
                                expression that recognizes a parent
                                resource named <code>service</code>
                                and catches any request against a
                                resource that falls under that parent. </para>
                            <para> The rate limiting component cannot
                                detect whether the service implementer
                                is requesting that each resource
                                request be tracked separately or as
                                part of a group; the component
                                defaults to tracking limited requests
                                under unique keys. </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <code>/service/([^!*'();:@&amp;=+$,/?#\\[\\]]*)/.*</code>
                        </td>
                        <td>
                            <para> This regular expression generates
                                cache keys from the second-tier
                                resource in a given request URI. This
                                is useful for grouping child resources
                                under a shared rate limit. </para>
                            <para> A service can require clients to
                                use their account numbers as part of
                                the resource tree to their service
                                resources. For a client request formed
                                like
                                   <code>http://example.com/service/12345-account/resource</code>,
                                executing this regular expression
                                against the client request extracts
                                   <code>12345-account</code>. The
                                rate limiting component can use this
                                extracted information as a unique
                                identifier to ensure that all of the
                                recorded rate limits belong only to
                                this client. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para> Service implementers should use capture groups
                    in their regular expressions. In addition, the
                    performance of the regular expression should be
                    taken into consideration when designing limits.
                    This is because a given expression's performance
                    has a direct impact on the rate limiting
                    component's performance and throughput. </para>
            </note>
        </section>
    </chapter>
    <chapter xml:id="Tracking_Requests-d1e431">
        <title>Tracking Client Requests</title>
        <para> The rate limiting component uses the 
            <code>X-PP-User</code> HTTP header for two purposes:
            <itemizedlist>
                <listitem>
                    <para>
                        recording request usage on a per-limit basis
                    </para>
                </listitem>
                <listitem>
                    <para>
                        recalling all stored limits that belong to a named client
                    </para>
                </listitem>
            </itemizedlist>
         </para>
        <section xml:id="Cache_Indexing-d1e439">
        <title>Cache Indexing</title>
            <para> 
                The caching format for the rate limiting component is designed for high throughput. 
                Because of this, an aggregation index is required to group active rate
                limits for a named client. 
            </para>
            <para> 
                The string value of the <code>X-PP-User</code> HTTP header is treated as the 
                <link linkend="Constructing_Cache_Keys-d1e378">cache key</link>
                for this index. 
            </para>
            <para> 
                The rate limiting component indexes stored limit cache keys in a separate cached
                object for each named client identified with the <code>X-PP-User</code> HTTP header.
                This data structure is called the user limit key map.  
            </para>
        </section>
        <section xml:id="Single_Node_Multi_Node-d1e447">
            <title>Caching in Single-Node or Multi-Node Configurations</title>
            <para> 
                The rate limiting component caches in single-node or multi-node configurations.
            </para>
            <para>
                The rate limiting component 
                supports a single-node &PRODNAME; installation in
                which all cache operations are performed locally. When no other nodes are identified in the system model as hosting
                a distributed datastore component, 
                &PRODNAME;'s default local
                datastore is used. 
            </para>
            <para> 
                The rate limiting component supports multiple-node &PRODNAME; installations
                via &PRODNAME;'s datastore service. If a clustered datastore is available, the
                component will make use of it for caching. 
            </para>
            </section>
    </chapter>
    <chapter xml:id="Querying_Limits-d1e531">
        <title>Querying Current Limits</title>
        <para> A client may ask the rate limiting component for
            information about the client's own current limits. Those
            limits may include <link linkend="Absolute-d1e631"
                >absolute limits</link>. </para>
        <para> Valid content MIME types for such requests are:
                <itemizedlist spacing="compact">
                <listitem>
                    <para>application/xml</para>
                </listitem>
                <listitem>
                    <para>application/json</para>
                </listitem>
                <listitem>
                    <para>application/vnd.vendor.service-v1+xml</para>
                </listitem>
                <listitem>
                    <para>application/vnd.vendor.service;f=2;e=xml</para>
                </listitem>
            </itemizedlist>
        </para>
        <para> As shown below, a request in which the user is
            identified via <code>X-PP-User</code> and the user's group
            is identified via <code>X-PP-Groups</code> generates a
            response showing all the limits applicable to that user in
            that group:</para>        
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>Sample Request/Response Conversation: Request
                Limits for User</caption>
            <thead>
                <tr>
                    <td>Request</td>
                    <td>Response</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
<programlisting>
GET /service/limits HTTP/1.1 
Accept: application/vnd.rackspace-v1.0+xml 
X-PP-User: demo-username
X-PP-Groups: demo-customer
</programlisting>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td>
<informalexample>
<literallayout class="monospaced">
HTTP/1.1 200 OK
Content-Length: 538
</literallayout>
</informalexample>
<informalexample>
<programlisting language="xml">
<xi:include href="samples/papi-ratelimit-response.xml" parse="text"/>
</programlisting>
</informalexample>
                    </td>
                </tr>
            </tbody>
        </table>   
        <para> The rate limiting component caches rate limits by user.
            Consequently, to query rate limits, a user must be passed
            into the rate limiting component. The rate limiting
            component uses the <code>X-PP-User</code> header to
            identify a user whose limits will be queried. Without a
            value in this header, the rate limiting component will
            send back a '401 Unauthorized'. </para>
        <para> The rate limiting component uses the
                <code>X-PP-Groups</code> header to determine which
            rate limits to apply to the user. If this header is not
            present, the rate limiting component will assign limits
            from a default group specified in the
                <code>rate-limiting.cfg.xml</code> configuration file. </para>
        <para> It is possible to query a user's rate limits before the
            user's limits are placed in the cache. This is the case
            when querying limits before the user has ever been rate
            limited. In this case, there are two possible results,
            based on the contents of the <code>X-PP-Groups</code>
            header: <itemizedlist>
                <listitem>
                    <para> If the <code>X-PP-Groups</code> header,
                        containing specification of a group, is passed
                        in, then the rate limits configured for the
                        specified group in rate-limiting.cfg.xml are
                        returned. </para>
                </listitem>
                <listitem>
                    <para> If the <code>X-PP-Groups</code> header is
                        not passed in, then the rate limits configured
                        for the default limit group in
                        rate-limiting.cfg.xml are returned. </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Once the user has made a call which uses any of the defined limits, the user has rate limits in the cache. 
            At this point, the rate limiting component will return the limits stored in the cache for that user.
        </para>
        <note>
            <para> The rate limiting component understands quality
                factors for the <code>X-PP-User</code> and
                    <code>X-PP-Groups</code> headers. This is useful
                when a service implementer wishes to employ multiple
                authentication/identity mechanisms. You can learn more
                about how &PRODNAME; handles authentication and
                identity in the &PRODNAME; Authentication and
                Authorization Components Deployment Handbook. </para>
            <para> If multiple user or group values are present in the
                    <code>X-PP-User</code> or <code>X-PP-Groups</code>
                headers with the same quality, then the first value is
                used. If the user or group does not have an explicit
                quality, &PRODNAME;  assumes the quality for that item
                is 1. </para>
        </note>
        <para> In the rate limiting configuration shown below,
                <code>rate-limiting.cfg.xml</code> defines limits to
            be applied to two groups, <code>BETA_Group</code> and
                <code>IP_Standard</code>, and separately defines
            limits to be applied to default group named
                <code>My_Group</code>. The limits defined for
                <code>My_Group</code> apply when no other group is
            specified. In the <code>request-endpoint</code> element,
            which applies to all groups, the <code>uri-regex</code>
            attribute is set to <code>/limits</code>.  This is the URI
            at which the user should query for rate limits.</para>
        <example>
            <title>Rate Limiting Configuration with Default Group</title>    
                <programlisting language="xml">
<xi:include href="samples/repose-ratelimit-default.xml" parse="text"/>
                </programlisting>
        </example>
        <para> Under this rate limiting configuration, a request in
            which the user is not yet in the cache generates a
            response showing the limits applicable to that user on the
            basis of the default group:</para>        
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>Sample Request/Response Conversation: Request
                Limits for User Not in Cache </caption>
            <thead>
                <tr>
                    <td>Request</td>
                    <td>Response</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <programlisting>
curl http://localhost:8020/limits -H "x-pp-user: 123456" -H "accept: application/xml" 
</programlisting>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <informalexample>
                            <programlisting language="xml">
<xi:include href="samples/repose-ratelimit-response-default.xml" parse="text"/>
</programlisting>
                        </informalexample>
                    </td>
                </tr>
            </tbody>
        </table> 
        <para> Under the same rate limiting configuration, a request
            associating a user with a group generates a response
            showing the limits applicable to that user on the basis of
            membership in the <code>IP_Standard</code> group:</para>        
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>Sample Request/Response Conversation: Request
                Limits for User in Group </caption>
            <thead>
                <tr>
                    <td>Request</td>
                    <td>Response</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <programlisting>
curl http://localhost:8020/limits -H "x-pp-user: 123456"  -H "x-pp-groups: IP_Standard" -H "accept: application/xml" 
</programlisting>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <informalexample>
                            <programlisting language="xml">
<xi:include href="samples/repose-ratelimit-response-group.xml" parse="text"/>
</programlisting>
                        </informalexample>
                    </td>
                </tr>
            </tbody>
        </table>         
    </chapter>
    <chapter xml:id="Absolute-d1e631">
        <title>Integrating Absolute Limits</title>
        <para> The rate limiting component is designed to integrate
            with limits that are returned as a response from the
            origin service. These limits are absolute, meaning that
            they define limits for the service as a whole rather than
            for any individual consumer of the service.  Absolute
            limits are specific to the origin service domain. For
            example, the absolute limits returned by the OpenStack
            Compute API may resemble the following: </para>
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>Sample Absolute Limits Returned by Origin Service</caption>
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Value</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <code> maxTotalRAMSize </code>
                    </td>
                    <td align="right">51200</td>
                    <td>
                        <para>Maximum total amount of RAM (MB)</para> 
                    </td>
                </tr>
                <tr>
                    <td>
                        <code> maxServerMeta </code>
                    </td>
                    <td align="right">5</td>
                    <td>
                        <para>Maximum number of metadata items
                            associated with a server</para>
                    </td>
                </tr>
                <tr>
                    <td>
                        <code> maxImageMeta  </code>
                    </td>
                    <td align="right">5</td>
                    <td>Maximum number of metadata items associated with an image</td>
                </tr>
                <tr>
                    <td>
                        <code> maxPersonality  </code>
                    </td>
                    <td align="right">5</td>
                    <td>Maximum number of file path/content pairs that can be supplied on server build</td>
                </tr>
                <tr>
                    <td>
                        <code> maxPersonalitySize  </code>
                    </td>
                    <td align="right">10240</td>
                    <td>Maximum size, in bytes, for each personality file</td>
                </tr>
            </tbody>
        </table>
        <para> To activate inclusion of absolute limits that are specific to a client's origin
            service, use the optional configuration attribute, <code>include-absolute-limits</code>. </para>
        <para> When <code>include-absolute-limits</code> is set to <code>true</code>, the rate
            limiting component marks incoming requests that match the limit request endpoint's
                <code>uri-regex</code> and then passes them down to the origin service. After the
            origin service responds with the client's absolute limits, the rate limiting component
            enhances the response with the combined absolute and current rate limits. It then sends
            the response to the client. </para>
        <note>
            <para>
                Repose will always request absolute limits from the origin service as XML. 
                This is due to issues with using 
                <link xlink:href="http://www.w3.org/Style/XSL/">XSL</link> 
                on JSON to combine absolute limits with current rate limits. 
                After it receives the absolute limits response as XML, 
                Repose combines the absolute limits response with the user's current rate limits and returns the combined limits in the media type (XML or JSON) requested by the user.
            </para>
        </note>
    </chapter>
    <chapter xml:id="Limited-d1e731">
        <title>Handling Limited Client Requests</title>
        <para> When a client makes a request that exceeds the client's specified rate limit, the
            rate limiting component will return the HTTP response code <errorcode>413</errorcode> (Request Entity Too
            Large). 
        </para> 
        <para>
            When this occurs, the response's <code>Retry-After</code> HTTP header contains HTTP-encoded data that the client can use to plan a retry. 
        </para>
        <table border="1" frame="box">
            <?dbfo keep-together="always"?>
            <caption>Sample Request/Response Conversation: Rate Exceeded</caption>
            <thead>
                <tr>
                    <td>Request</td>
                    <td>Response</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
<programlisting>
GET /service/my/resource HTTP/1.1 
Accept: application/vnd.rackspace-v1.0+xml 
X-PP-User: username
X-PP-Groups: customer
</programlisting>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td>
<programlisting>
HTTP/1.1 413 Request Entity Too Large
Retry-After: Thu, 30 Jun 2011 20:24:39 GMT
</programlisting>
                    </td>
                </tr>
            </tbody>
        </table>
     </chapter>
    <xi:include href="chapters/afterword.xml"/>
</book>
