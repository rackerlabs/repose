apply plugin: 'ear'
apply plugin: 'nebula.ospackage'

dependencies {
    earlib project(":repose-aggregator:components:filters:api-validator-filter")
    earlib project(":repose-aggregator:components:filters:attribute-mapping-policy-validation-filter")
    earlib project(":repose-aggregator:components:filters:simple-rbac-filter")
    earlib project(":repose-aggregator:components:filters:saml-policy-translation-filter")
}

ear {
    manifest {
        attributes(
                "Specification-Title": "Repose Components - $project.name",
                "Specification-Vendor": "Rackspace US, Inc.",
                "Specification-Version": version,
                "Implementation-Title": "Repose Components - $project.name",
                "Implementation-Version": version,
                "Implementation-Vendor": "Rackspace US, Inc.",
                "Implementation-Vendor-Id": project.group,
                "Built-By": System.getProperty('user.name'),
                "Build-Jdk": org.gradle.internal.jvm.Jvm.current(),
                "Created-By": "Gradle $project.gradle.gradleVersion",
        )
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            artifact source: ear, extension: 'ear'
            if(project.hasProperty('release')) {
                artifact source: buildDeb, extension: 'deb'
                artifact source: buildRpm, extension: 'rpm'
            }

            pom.withXml {
                asNode().appendNode('packaging', 'ear')
            }
        }
    }
}

ospackage {
    packageName = "repose-extensions-filter-bundle"
    os = LINUX
    packageDescription 'Package for the Repose Extensions Filter Bundle'
    priority 'optional'
    packageGroup 'Applications/Internet'
    maintainer 'Repose Development <ReposeCore@Rackspace.com>'
    url 'http://openrepose.org'

    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')) {
        signingKeyId project.getProperty('signing.keyId')
        signingKeyPassphrase project.getProperty('signing.password')
        signingKeyRingFile file(project.getProperty('signing.secretKeyRingFile'))
    }

    into '/usr/share/repose/filters'

    //the bundle
    from(ear.outputs.files) {
        user 'root'
        permissionGroup 'root'
        fileMode 0555
    }

    //the configs
    from('src/config/filters') {
        into '/etc/repose/examples'
        user 'repose'
        permissionGroup 'repose'
        fileMode 0640
    }

    //the license info
    from(["$rootDir/LICENSE.txt", "$rootDir/CONTRIBUTORS.txt", 'src/config/docs/DEPENDENCIES.txt']) {
        into '/usr/share/doc/repose-extensions-filter-bundle'
        user 'root'
        permissionGroup 'root'
        fileMode 0444
    }

    requires("repose-$project.version")

    replaces('repose-extension-filters')
}

buildDeb {
    requires('java8-runtime-headless')
}

buildRpm {
    release = 1

    addParentDirs false
    requires('java', '1.8.0', GREATER | EQUAL)
}
