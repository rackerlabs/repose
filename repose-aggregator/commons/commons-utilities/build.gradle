dependencies {
    compile project(':repose-aggregator:components:services:http-client-service:http-client-service-api')
    compile "org.scala-lang:scala-library"
    compile "org.slf4j:slf4j-api"
    compile "commons-pool:commons-pool"
    compile "com.typesafe.scala-logging:scala-logging-slf4j_$scalaMajDotMin"
    compile "commons-io:commons-io"
    compile "commons-codec:commons-codec"
    compile "org.apache.commons:commons-lang3"
    compile "com.fasterxml.jackson.core:jackson-core"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "org.apache.httpcomponents:httpclient"
    compile "org.jvnet.jaxb2_commons:jaxb2-basics-runtime"
    compile "com.typesafe.play:play-json_$scalaMajDotMin"
    compile "io.opentracing:opentracing-api"

    compileOnly "javax.ws.rs:javax.ws.rs-api"
    compileOnly "org.glassfish:javax.servlet" //todo: swap these as part of REP-3950
//    compileOnly "javax.servlet:javax.servlet-api"

    testCompile project(':repose-aggregator:commons:commons-test')
    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-all"
    testCompile "org.codehaus.groovy:groovy-all"
    testCompile "org.mockito:mockito-all"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.spockframework:spock-core"
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl"
    testCompile "org.apache.logging.log4j:log4j-core"
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', classifier: 'tests'
    testCompile "org.springframework:spring-test"
    testCompile "org.slf4j:jcl-over-slf4j"
}


sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

license {
    excludes(["**/empty.txt", "**/fail.xml", "**/message.xsl", "**/test.properties", "**/warn.xml"])
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage -- need more coverage, but we don't want the build to fail for the baseline
                    limit.minimum = 0.73
                }
            }
        }
    }
}
