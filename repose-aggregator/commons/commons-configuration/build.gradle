dependencies {
    compile project(':repose-aggregator:commons:commons-utilities')
    compile project(':repose-aggregator:core:repose-core-api')
    compile "xerces:xerces-xsd11"
    compile "xalan:xalan"
    compile "org.slf4j:slf4j-api"
    compile "commons-io:commons-io"
    compile "com.google.guava:guava" // Forces the version used by jtwig-core
    compile "org.jtwig:jtwig-core"

    compileOnly "javax.servlet:javax.servlet-api"

    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-library"
    testCompile "org.mockito:mockito-core"
    testCompile "org.scala-lang:scala-library"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.scala-lang:scala-reflect" // Forces the version used by scala-logging.
    testCompile "com.typesafe.scala-logging:scala-logging_$scalaMajDotMin"
    testCompile "org.codehaus.groovy:groovy-all"
    testCompile "org.spockframework:spock-core"
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl"
    testCompile "org.apache.logging.log4j:log4j-core"
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', classifier: 'tests'
}

test {
    environment 'TEST_USER', 'World'
}

license {
    excludes(["**/limits.xsd", "**/atom.xsd", "**/httpx-headers.xsd", "**/httpx-common.xsd", "**/httpx.xsd",
              "**/versioning-schema1.1.xsd.txt", "**/versioning.xsd", "**/xproc-papi.xsd", "**/xml.xsd", "**/xproc.xsd",
              "**/test.properties", "**/README.md"])
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage -- need more coverage, but we don't want the build to fail for the baseline
                    limit.minimum = 0.56
                }
            }
        }
    }
}
