import org.apache.tools.ant.filters.ReplaceTokens

testSets {
    performanceTest
}

dependencies {
    //todo: not certain why this was neccessary, but it lets things compile
    testCompileOnly 'org.scala-lang:scala-library'

    performanceTestCompile project(':repose-aggregator:tests:performance-test-framework')
    performanceTestCompileOnly 'org.scala-lang:scala-library'
    performanceTestCompileOnly 'io.gatling:gatling-core'
    performanceTestCompileOnly 'io.gatling:gatling-http'
}

license {
    exclude "**/*.json"
    exclude "**/saml*.xml"
    exclude "**/*.xsl"
}

processPerformanceTestResources {
    //INFO: We'd like to use the more standard gradle 'expand( docsHome: docsHome)',
    // however it chokes pretty hard on the regexs we sprinkle into our xml specifically the `\`.
    // Instead I've elected to use ant based filtering.
    filter(ReplaceTokens, tokens: [gatlingVersion: versionProperties.get('gatlingVersion')])
}

task buildAnsibleDirectory() {
    dependsOn("processPerformanceTestResources")
    ext.outputDir = "$buildDir/ansible_root"
    inputs.files(configurations.performanceTestCompile.files,
                processPerformanceTestResources.outputs,
                sourceSets.performanceTest.scala.srcDirs)
    outputs.dir(outputDir)

    doLast {
        file(outputDir).mkdirs()

        copy {
            from processPerformanceTestResources.outputs
            into outputDir
        }

        copy {
            from sourceSets.performanceTest.scala.srcDirs
            into outputDir + "/roles/gatling/files/simulations"
        }

        copy {
            from configurations.performanceTestCompile.files
            into outputDir + "/roles/gatling/files/libs"
        }
    }
}

// todo: do not produce (or at least, do not publish) any artifacts for this project
