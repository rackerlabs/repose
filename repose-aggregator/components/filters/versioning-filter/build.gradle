dependencies {
    xjc "org.jvnet.jaxb2_commons:jaxb2-fluent-api"

    compile project(":repose-aggregator:core:repose-core-api")
    compile project(":repose-aggregator:commons:commons-utilities")
    compile project(":repose-aggregator:components:services:health-check-service:health-check-service-api")
    compile "commons-io:commons-io"
    compile "org.slf4j:slf4j-api"
    compile "org.scala-lang:scala-library"
    compile "org.scala-lang:scala-reflect" // Forces the version used by scala-logging.
    compile "com.typesafe.scala-logging:scala-logging_$scalaMajDotMin"
    compile "io.dropwizard.metrics:metrics-core"
    compile "xalan:xalan"
    compile "org.springframework:spring-beans"

    compileOnly "javax.servlet:javax.servlet-api"
    compileOnly "javax.inject:javax.inject"
    compileOnly "com.google.code.findbugs:jsr305"

    testCompile project(":repose-aggregator:commons:commons-test")
    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-library"
    testCompile "org.mockito:mockito-core"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.springframework:spring-test"
    testCompile "org.springframework:spring-web"
    testCompile "org.slf4j:jcl-over-slf4j"
    testCompile "org.xmlunit:xmlunit-matchers"
}

jaxb {
    xjc {
        args = ["-Xfluent-api"]
    }
}

license {
    excludes(["atom.xsd", "versioning-schema1.1.xsd.txt", "versioning.xsd", "xml.xsd", "version-json.xsl",
              "choices.json", "version.json", "choices2.json", "versions.json", "choices.xml", "versions2.json",
              "version.xml", "versions.xml", "version-identity.json", "versions-identity.json"]
            .collect { "**/$it" })
}
