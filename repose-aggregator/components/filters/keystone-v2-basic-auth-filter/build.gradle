dependencies {
    compile project(":repose-aggregator:core:repose-core-api")
    compile project(":repose-aggregator:commons:commons-utilities")
    compile project(":repose-aggregator:components:services:datastore-service:datastore-service-api")
    compile project(':repose-aggregator:components:services:http-client-service:http-client-service-api')
    compile "org.openrepose:http-delegation"
    compile "org.scala-lang:scala-library"
    compile "org.scala-lang.modules:scala-xml_2.11"
    compile "org.scala-lang:scala-reflect" // Forces the version used by scala-logging.
    compile "com.typesafe.scala-logging:scala-logging-slf4j_$scalaMajDotMin"
    compile "org.springframework:spring-web"
    compile "org.apache.httpcomponents:httpclient"
    compile "org.apache.httpcomponents:httpcore"

    compileOnly "javax.servlet:javax.servlet-api"
    compileOnly "javax.inject:javax.inject"
    compileOnly "javax.ws.rs:javax.ws.rs-api"

    testCompile project(":repose-aggregator:commons:commons-test")
    testCompile "junit:junit"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.mockito:mockito-core"
    testCompile "org.springframework:spring-test"
    testCompile "org.apache.logging.log4j:log4j-core"
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', classifier: 'tests'
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl"
    testCompile "org.slf4j:jcl-over-slf4j"
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage -- need more coverage, but we don't want the build to fail for the baseline
                    limit.minimum = 0.40
                }
            }
        }
    }
}
