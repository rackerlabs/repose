dependencies {
    compile project(":repose-aggregator:core:repose-core-api")
    compile project(":repose-aggregator:commons:commons-utilities")
    compile "org.slf4j:slf4j-api"
    compile "org.scala-lang:scala-library"
    compile "org.scala-lang:scala-reflect" // Forces the version used by scala-logging.
    compile "com.typesafe.scala-logging:scala-logging_$scalaMajDotMin"
    compile "io.dropwizard.metrics:metrics-core"

    compileOnly "javax.servlet:javax.servlet-api"
    compileOnly "javax.inject:javax.inject"

    testCompile "junit:junit"
    testCompile "org.mockito:mockito-core"
    testCompile "org.scalatest:scalatest_$scalaMajDotMin"
    testCompile "org.springframework:spring-test"
    testCompile "org.slf4j:jcl-over-slf4j"
}

jacocoTestCoverageVerification {
    violationRules {
        rules.forEach { rule ->
            rule.limits.forEach { limit ->
                if (limit.counter == 'INSTRUCTION' && limit.value == 'COVEREDRATIO') {
                    // todo: set to the current coverage -- need more coverage, but we don't want the build to fail for the baseline
                    limit.minimum = 0.66
                }
            }
        }
    }
}
