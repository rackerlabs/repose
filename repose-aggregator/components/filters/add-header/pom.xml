<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>filters-support</artifactId>
        <groupId>com.rackspace.papi.components</groupId>
        <version>7.0.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>add-header</artifactId>

    <name>Repose Components - Add Header</name>
    <description>
        This filter adds a custom header to the request
        with a specified value from the configuration
    </description>

    <packaging>jar</packaging>

    <properties>
        <sonar.jacoco.itReportPath>${project.basedir}/../../../target/jacoco-it.exec</sonar.jacoco.itReportPath>
    </properties>

    <repositories>
        <repository>
            <id>typesafe</id>
            <name>typesafe-releases</name>
            <url>http://repo.typesafe.com/typesafe/maven-releases</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.rackspace.papi.core</groupId>
            <artifactId>core-lib</artifactId>
        </dependency>

        <dependency>
            <groupId>com.rackspace.papi.commons</groupId>
            <artifactId>configuration</artifactId>
        </dependency>

        <dependency>
            <groupId>com.rackspace.papi.commons</groupId>
            <artifactId>utilities</artifactId>
        </dependency>

        <!-- Let's use Scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.10</artifactId>
        </dependency>

        <!-- Mockrunner for mock HttpServletRequest -->
        <dependency>
            <groupId>com.mockrunner</groupId>
            <artifactId>mockrunner-servlet</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- super handy lazy logging! -->
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging-slf4j_2.10</artifactId>
            <version>2.1.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- The plugin that gets Scala running -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>

            <!-- The plugin that cleans up our XSD to conform to XML 1.0 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>src/main/resources/META-INF/schema/config</dir>
                            <stylesheet>../xsl/remove-1.1-elements.xsl</stylesheet>
                            <outputDir>${project.build.directory}/generated-resources/xml/xslt/config</outputDir>
                        </transformationSet>
                    </transformationSets>
                </configuration>
            </plugin>

            <!-- The plugin that compiles and binds our clean XSD to a Java object -->
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>

                <configuration>
                    <specVersion>2.2</specVersion>
                    <schemaDirectory>${project.build.directory}/generated-resources/xml/xslt</schemaDirectory>

                    <schemaIncludes>
                        <include>**/*.xsd</include>
                    </schemaIncludes>
                    <bindingIncludes>
                        <include>**/*.xjb</include>
                    </bindingIncludes>

                    <strict>true</strict>
                    <verbose>false</verbose>
                </configuration>

            </plugin>
        </plugins>
    </build>
</project>