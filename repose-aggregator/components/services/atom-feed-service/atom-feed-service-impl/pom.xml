<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>atom-feed-service-support</artifactId>
        <groupId>org.openrepose</groupId>
        <version>8.0.0.0-SNAPSHOT</version>
    </parent>

    <name>Repose Services - Atom Feed Service Impl</name>
    <artifactId>atom-feed-service-impl</artifactId>
    <packaging>jar</packaging>

    <properties>
        <sonar.jacoco.itReportPath>${project.basedir}/../../../../target/jacoco-it.exec</sonar.jacoco.itReportPath>
    </properties>

    <dependencies>
        <!-- API to be implemented by this module -->
        <dependency>
            <groupId>org.openrepose</groupId>
            <artifactId>atom-feed-service-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Let's use Scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <!-- Scalatest for testing scala -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.MajDotMin}</artifactId>
        </dependency>

        <!-- Lazy logging -->
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging-slf4j_${scala.MajDotMin}</artifactId>
        </dependency>

        <!-- Injecting Spring values -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <!-- JAXB -->
        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-runtime</artifactId>
        </dependency>

        <!-- HttpClient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- Play JSON -->
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-json_${scala.MajDotMin}</artifactId>
        </dependency>

        <!-- Akka -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.MajDotMin}</artifactId>
        </dependency>

        <!-- Akka Testing -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_${scala.MajDotMin}</artifactId>
            <version>${akka.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Akka Mock Atom Feed Service -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-core-experimental_${scala.MajDotMin}</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Update listener and configuration service -->
        <dependency>
            <groupId>org.openrepose</groupId>
            <artifactId>core-service-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Guava Optional to satisfy transitive dependency check -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- CommonHttpHeader -->
        <dependency>
            <groupId>org.openrepose</groupId>
            <artifactId>commons-utilities</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- To migrate Abdera to SLF4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>

        <!-- Abdera for reading Atom Feeds -->
        <dependency>
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-core</artifactId>
            <version>1.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Abdera IRIs -->
        <dependency>
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-i18n</artifactId>
            <version>1.1.3</version>
        </dependency>

        <!-- Abdera for reading Atom Feeds -->
        <dependency>
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-parser</artifactId>
            <version>1.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Guava findbugs for Scala compatibility -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>1.3.9</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- The plugin that compiles and binds our clean XSD to a Java object -->
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <configuration>
                    <specVersion>2.2</specVersion>
                    <schemaDirectory>src/main/resources/META-INF/schema/config</schemaDirectory>

                    <schemaIncludes>
                        <include>**/*.xsd</include>
                    </schemaIncludes>
                    <bindingIncludes>
                        <include>**/*.xjb</include>
                    </bindingIncludes>

                    <!-- Plugins to generate equals and hashcode methods -->
                    <args>
                        <arg>-Xequals</arg>
                        <arg>-XhashCode</arg>
                    </args>
                    <plugins>
                        <plugin>
                            <groupId>org.jvnet.jaxb2_commons</groupId>
                            <artifactId>jaxb2-basics</artifactId>
                        </plugin>
                    </plugins>

                    <strict>true</strict>
                    <verbose>false</verbose>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>