#!/bin/bash
#
# Startup script for Repose Valve
#
# chkconfig: 345 85 15     - start or stop process definition within the boot process
# description: Script for starting Repose Valve as a daemon on system startup
# processname: repose-valve

# Source function library.
. /etc/rc.d/init.d/functions

# Set sensible defaults
LOG_PATH=/var/log/repose
JAVA=/usr/bin/java
CONFIG_DIRECTORY=/etc/repose
USER=repose
NAME=repose-valve
DAEMON_HOME=/usr/share/repose
PID_FILE=/var/run/${NAME}.pid
REPOSE_JAR=${DAEMON_HOME}/${NAME}.jar
START_ARGS="-c $DAEMON_HOME -p $PID_FILE -u $USER -o $LOG_PATH/stdout.log -e $LOG_PATH/stderr.log -l /var/lock/subsys/$NAME"
JAVA_OPTS=""
RUN_OPTS="-c $CONFIG_DIRECTORY"
CLEAN=/usr/bin/clean-repose-deploy
daemonize=/usr/sbin/daemonize

# Can override the defaults in /etc/sysconfig
. /etc/sysconfig/repose

# First validate that we have a java executable on the path
command -v $JAVA >/dev/null 2>&1 || { echo 'Repose requires the $JAVA environment variable be set to a Java executable! This can be done in the sourced /etc/sysconfig/repose file. Exiting!'; exit 1; }

# We've found a java on the path, now validate that the minor is at least 7
# testing to figure out java version stuff
# We're not guaranteed to have bash on debians, so we have to use sh stuff
VERSION=$($JAVA -version 2>&1 | grep ' version' | awk '{ print substr($3, 2, length($3)-2); }')
JAVA_MINOR=$(echo $VERSION | tr "." " " | cut -d " " -f2)

if [ "$JAVA_MINOR" -lt "8" ]; then
  echo "Repose requires a Java version of at least 8 to function."
  echo "Please install a JRE 1.8 or greater."
  exit 1
fi

if [ ! -d $DAEMON_HOME ]; then
  echo "Unable to find $NAME's directory: $DEAMON_HOME."
  exit 1
fi

if [ ! -d $CONFIG_DIRECTORY ]; then
  echo "Unable to find $CONFIG_DIRECTORY."
  exit 1
fi

if [ ! -d $LOG_PATH ]; then
  echo "Unable to log to $LOG_PATH."
  exit 1
fi


start()
{
  echo -n "Starting $NAME: "
  $CLEAN $CONFIG_DIRECTORY > /dev/null 2>&1
  daemon $daemonize $START_ARGS $JAVA $JAVA_OPTS -jar $REPOSE_JAR $RUN_OPTS
  echo
}

stop()
{
  echo -n "Stopping $NAME: "

  killproc -p $PID_FILE -d 3 $NAME && rm -f /var/lock/subsys/$NAME
  echo
}

case "$1" in
  start)
    start
    ;;

  stop)
    stop
    ;;

  restart)
    stop
    start
    ;;

  status)
    status -p $PID_FILE $NAME
    ;;

  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
    exit 1
esac
